{"ast":null,"code":"var _jsxFileName = \"/home/brandon/Desktop/Research/Modern_Task_WAPP/my-app/src/App.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Helmet } from \"react-helmet\";\nimport { Label, Table, Segment, Button } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditTaskModal = taskIndex => {};\n\n_c = EditTaskModal;\n\nconst ElementsTable = () => {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    // Task are stored as an array of (creation index, name, {tag1, tag2, ...}, isdone)\n    setTasks([[1, 'Task 1', ['Task 1.1', 'Task 1.2'], false], [2, 'Task 2', ['Task 2.1', 'Task 2.2'], false], [3, 'Task 3', ['Task 3.1', 'Task 3.2'], false]]);\n    console.log(tasks);\n  });\n  return /*#__PURE__*/_jsxDEV(Table, {\n    celled: true,\n    children: [/*#__PURE__*/_jsxDEV(Table.Header, {\n      children: /*#__PURE__*/_jsxDEV(Table.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n          children: \"Task Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n          children: \"Tags\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n          children: \"Edit Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n      children: tasks.map(_ref => {\n        let [index, name, tags, isdone] = _ref;\n        return /*#__PURE__*/_jsxDEV(Table.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: tags.map(tag => /*#__PURE__*/_jsxDEV(Label, {\n              color: \"blue\",\n              tag: true,\n              children: tag\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: isdone ? /*#__PURE__*/_jsxDEV(Label, {\n              color: \"green\",\n              children: \"Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 25\n            }, this) : /*#__PURE__*/_jsxDEV(Label, {\n              color: \"pink\",\n              children: \"Not Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 61\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {},\n              children: \"Edit Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ElementsTable, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n\n_c2 = ElementsTable;\n\nconst MainBodySegment = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainBodySegment\",\n    children: /*#__PURE__*/_jsxDEV(Segment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Brandon's \\\"Modern\\\" To-Do App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ElementsTable, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = MainBodySegment;\n\nfunction App() {\n  _s2();\n\n  useEffect(() => {\n    document.title = \"Modern TODO App\";\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '3em'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"style\", {\n        children: \"body { background-color: #eddefa; }\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainBodySegment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"EditTaskModal\");\n$RefreshReg$(_c2, \"ElementsTable\");\n$RefreshReg$(_c3, \"MainBodySegment\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Helmet","Label","Table","Segment","Button","EditTaskModal","taskIndex","ElementsTable","tasks","setTasks","console","log","map","index","name","tags","isdone","tag","MainBodySegment","textAlign","App","document","title","padding"],"sources":["/home/brandon/Desktop/Research/Modern_Task_WAPP/my-app/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Helmet } from \"react-helmet\";\nimport { Label, Table, Segment, Button } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css'\nimport './App.css';\n\nconst EditTaskModal = (taskIndex) => {\n  \n}\n\n\nconst ElementsTable = () => {\n  const [tasks, setTasks] = useState<Array<[number, string, Array<string>, Boolean]>>([]);\n  useEffect(() => {\n    // Task are stored as an array of (creation index, name, {tag1, tag2, ...}, isdone)\n    setTasks([\n      [1, 'Task 1', ['Task 1.1', 'Task 1.2'], false],\n      [2, 'Task 2', ['Task 2.1', 'Task 2.2'], false],\n      [3, 'Task 3', ['Task 3.1', 'Task 3.2'], false],\n    ]);\n\n    console.log(tasks);\n\n  });\n  return (\n    <Table celled>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell>Task Name</Table.HeaderCell>\n          <Table.HeaderCell>Tags</Table.HeaderCell>\n          <Table.HeaderCell>Completed</Table.HeaderCell>\n          <Table.HeaderCell>Edit Task</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n\n      <Table.Body>\n        {tasks.map(([index, name, tags, isdone]) =>\n          <Table.Row key={index}>\n            <Table.Cell>{name}</Table.Cell>\n            <Table.Cell>\n              {tags.map((tag) =>\n                <Label color=\"blue\" tag>{tag}</Label>)\n              }\n            </Table.Cell>\n            <Table.Cell>\n              {isdone ? <Label color=\"green\">Done</Label> : <Label color=\"pink\">Not Done</Label>}\n            </Table.Cell>\n            <Table.Cell>\n              <Button onClick={() => {\n\n              }}\n\n              >Edit Task</Button>\n            </Table.Cell>\n          </Table.Row>\n        )}\n      </Table.Body>\n    </Table>\n  );\n}\n\nconst MainBodySegment = () => {\n  return (\n    <div className=\"mainBodySegment\">\n      <Segment>\n        <div style={{ textAlign: 'center' }}>\n          <h1>Brandon's \"Modern\" To-Do App</h1>\n        </div>\n\n        <ElementsTable />\n      </Segment >\n    </div >\n  );\n}\n\nfunction App() {\n  useEffect(() => {\n    document.title = \"Modern TODO App\";\n\n  });\n\n  return (\n    <div\n      style={{\n        padding: '3em',\n      }} >\n      <Helmet>\n        <style>{\"body { background-color: #eddefa; }\"}</style>\n      </Helmet>\n      <MainBodySegment />\n    </div >\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
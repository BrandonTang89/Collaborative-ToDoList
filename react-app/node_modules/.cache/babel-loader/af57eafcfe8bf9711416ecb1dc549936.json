{"ast":null,"code":"var _jsxFileName = \"/home/brandon/Desktop/Research/Modern_Task_WAPP/react-app/src/App.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$();\n\nimport React, { useEffect, useState, useReducer } from 'react';\nimport { Helmet } from \"react-helmet\";\nimport { Label, Table, Segment, Modal, Header, Form, TextArea, Dropdown, Button, Icon, Divider, Checkbox, Search, Grid } from 'semantic-ui-react';\nimport _ from 'lodash';\nimport 'semantic-ui-css/semantic.min.css';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst backend_uri = \"http://localhost:8000/\";\n;\nconst statuses = [{\n  key: \"Not Started\",\n  text: \"Not Started\",\n  value: \"Not Started\"\n}, {\n  key: \"In Progress\",\n  text: \"In Progress\",\n  value: \"In Progress\"\n}, {\n  key: \"Completed\",\n  text: \"Completed\",\n  value: \"Completed\"\n}];\n\nconst TagDropDown = props => {\n  _s();\n\n  let initOptions = [];\n  props.tagSet.forEach(tag => {\n    initOptions.push({\n      key: tag,\n      text: tag,\n      value: tag\n    });\n  });\n  const [options, setOptions] = useState(initOptions);\n\n  const handleAddition = (e, _ref) => {\n    let {\n      value\n    } = _ref;\n    console.log(\"hello\", options);\n    setOptions([{\n      key: value,\n      text: value,\n      value: value\n    }, ...options]);\n  };\n\n  const handleChange = (e, _ref2) => {\n    let {\n      value\n    } = _ref2;\n    props.onChange(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dropdown, {\n    options: options,\n    value: props.currentTags,\n    placeholder: \"Select Tag\",\n    search: true,\n    selection: true,\n    fluid: true,\n    multiple: true,\n    allowAdditions: true,\n    onAddItem: handleAddition,\n    onChange: handleChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TagDropDown, \"mmUoK8PdDFSDE0uMe6E+Uaja3qQ=\");\n\n_c = TagDropDown;\n\nconst TaskRow = props => {\n  _s2();\n\n  const [open, setOpen] = useState(false);\n  const [taskName, setTaskName] = useState(props.taskInfo.name);\n  const [taskDesc, setTaskDesc] = useState(props.taskInfo.desc);\n  const [tags, setTags] = useState(props.taskInfo.tags);\n  const [taskStatus, setTaskStatus] = useState(props.taskInfo.taskStatus);\n\n  const handleTagsChange = tags => {\n    setTags(tags);\n  };\n\n  let trigger_element = !props.isCreate ? /*#__PURE__*/_jsxDEV(Table.Row, {\n    children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n      children: props.taskInfo.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n      children: props.taskInfo.desc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexWrap: \"wrap\"\n        },\n        children: props.taskInfo.tags.map(tag => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Label, {\n            color: \"blue\",\n            tag: true,\n            children: tag\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n      children: props.taskInfo.taskStatus === 'Not Started' ? /*#__PURE__*/_jsxDEV(Label, {\n        color: \"red\",\n        children: props.taskInfo.taskStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this) : props.taskInfo.taskStatus === 'In Progress' ? /*#__PURE__*/_jsxDEV(Label, {\n        color: \"orange\",\n        children: props.taskInfo.taskStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(Label, {\n        color: \"green\",\n        children: props.taskInfo.taskStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, props.taskInfo._id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Button, {\n    icon: true,\n    size: \"huge\",\n    labelPosition: \"left\",\n    children: [/*#__PURE__*/_jsxDEV(Icon, {\n      name: \"plus circle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), \"Add\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 7\n  }, this);\n  const modalHeader = props.isCreate ? \"Add Task\" : \"Edit Task\";\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: () => setOpen(false),\n    onOpen: () => setOpen(true),\n    open: open,\n    closeOnDimmerClick: false,\n    closeOnEscape: false,\n    trigger: trigger_element,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      children: modalHeader\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n      children: /*#__PURE__*/_jsxDEV(Modal.Description, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          children: [\"Editing Task: \", props.taskInfo.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Task Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              placeholder: \"Task Name\",\n              defaultValue: taskName,\n              onChange: e => setTaskName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Task Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n              placeholder: \"Task Description\",\n              defaultValue: taskDesc,\n              onChange: e => setTaskDesc(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Tags\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TagDropDown, {\n              tagSet: props.tagSet,\n              currentTags: tags,\n              onChange: handleTagsChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Task Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n              placeholder: \"Select Status\",\n              fluid: true,\n              selection: true,\n              options: statuses,\n              defaultValue: taskStatus,\n              onChange: (e, _ref3) => {\n                let {\n                  value\n                } = _ref3;\n                setTaskStatus(value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n      children: [/*#__PURE__*/_jsxDEV(Button.Group, {\n        floated: \"left\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          negative: true,\n          onClick: () => {\n            console.log(\"Deleting Task\", taskName);\n            fetch(backend_uri + \"deletetask\", {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                _id: props.taskInfo._id\n              })\n            }).then(res => {\n              if (res.ok) {\n                console.log(\"Task Deleted\");\n                setOpen(false);\n                props.refreshCallback();\n              } else {\n                console.log(\"Task Delete Failed\");\n              }\n            });\n          },\n          children: \"Delete Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          setOpen(false);\n          setTaskName(props.taskInfo.name);\n          setTaskDesc(props.taskInfo.desc);\n          setTags(props.taskInfo.tags);\n          setTaskStatus(props.taskInfo.taskStatus);\n        },\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"green\",\n        onClick: () => {\n          console.log(\"Updating Task\", taskName);\n          fetch(backend_uri + \"updatetask\", {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              _id: props.taskInfo._id,\n              name: taskName,\n              desc: taskDesc,\n              tags: tags,\n              status: taskStatus\n            })\n          }).then(res => {\n            if (res.ok) {\n              console.log(\"Task Updated\");\n              setOpen(false);\n              props.refreshCallback();\n            } else {\n              console.log(\"Task Update Failed\");\n            }\n          });\n        },\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          name: \"checkmark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), \" Save\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(TaskRow, \"aImGXrEMbAjzKT67aviJhO1rIZY=\");\n\n_c2 = TaskRow;\nTaskRow.defaultProps = {\n  isCreate: false\n};\n\nfunction SearchBox(props) {\n  _s3();\n\n  const initialState = {\n    loading: false,\n    results: [],\n    value: ''\n  };\n\n  function SearchBoxReducer(state, action) {\n    switch (action.type) {\n      case 'CLEAN_QUERY':\n        return initialState;\n\n      case 'START_SEARCH':\n        return { ...state,\n          loading: true,\n          value: action.query\n        };\n\n      case 'FINISH_SEARCH':\n        return { ...state,\n          loading: false,\n          results: action.results\n        };\n\n      case 'UPDATE_SELECTION':\n        return { ...state,\n          value: action.selection\n        };\n\n      default:\n        throw new Error();\n    }\n  }\n\n  const [state, dispatch] = useReducer(SearchBoxReducer, initialState);\n  const {\n    loading,\n    results,\n    value\n  } = state; // Update results while typing\n\n  const timeoutRef = React.useRef(0);\n  const handleSearchChange = React.useCallback((e, data) => {\n    clearTimeout(timeoutRef.current);\n    dispatch({\n      type: 'START_SEARCH',\n      query: data.value\n    });\n    timeoutRef.current = window.setTimeout(() => {\n      if (data.value.length === 0) {\n        dispatch({\n          type: 'CLEAN_QUERY'\n        });\n        return;\n      }\n\n      const re = new RegExp(_.escapeRegExp(data.value), 'i');\n      const isMatch = !props.searchInDesc ? result => re.test(result.title) : result => re.test(result.title) || re.test(result.description);\n      dispatch({\n        type: 'FINISH_SEARCH',\n        results: _.filter(props.source, isMatch)\n      });\n    }, 300);\n  }, [props.source, props.searchInDesc]);\n  useEffect(() => {\n    dispatch({\n      type: 'FINISH_SEARCH',\n      results: props.source\n    });\n    return () => {\n      clearTimeout(timeoutRef.current);\n    };\n  }, [props.source]);\n  useEffect(() => {\n    props.updateValue(value);\n  }, [value, props]);\n  return /*#__PURE__*/_jsxDEV(Search, {\n    fluid: true,\n    size: \"large\",\n    loading: loading,\n    placeholder: \"Search...\",\n    onResultSelect: (e, data) => {\n      dispatch({\n        type: 'UPDATE_SELECTION',\n        selection: data.result.title\n      });\n    },\n    onSearchChange: handleSearchChange,\n    results: results,\n    value: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(SearchBox, \"8ndylypjOG8P14wbk5XbCAcUhhY=\");\n\n_c3 = SearchBox;\n\nconst TaskTable = () => {\n  _s4();\n\n  const [tagSet, setTagSet] = useState(new Array()); // Main Table States: Sorting Column, Table Data, Sorting Direction\n\n  function sortReducer(state, action) {\n    switch (action.type) {\n      case 'RESET':\n        return initTable(action.payload);\n\n      case 'CHANGE_SORT':\n        if (state.column === action.column) {\n          return { ...state,\n            data: state.data.slice().reverse(),\n            direction: state.direction === 'ascending' ? 'descending' : 'ascending'\n          };\n        }\n\n        return {\n          column: action.column,\n          data: _.sortBy(state.data, [action.column]),\n          direction: 'ascending'\n        };\n\n      default:\n        throw new Error();\n    }\n  }\n\n  const initTable = newdata => {\n    return {\n      column: null,\n      data: newdata,\n      direction: null\n    };\n  };\n\n  const [backupData, setBackupData] = useState(new Array());\n  const [state, dispatch] = useReducer(sortReducer, [], initTable); // here state = {column, data, dir}\n\n  const {\n    column,\n    data,\n    direction\n  } = state; // Searching States\n\n  const [searchData, setSearchData] = useState([]);\n  const [searchTagOptions, setSearchTagOptions] = useState([]);\n  const [searchField, setSearchField] = useState(\"\");\n  const [searchInDesc, setSearchInDesc] = useState(false);\n  const [searchTags, setSearchTags] = useState([]);\n  const [searchStatus, setSearchStatus] = useState(\"\"); // Initial Set-Up, to replace with backend query\n\n  const initialiseData = () => {\n    /*\n    let initTasks: Array<taskRowRep> = [\n      { _id: \"1\", name: 'Learn HTML', desc: \"Create at least something\", tags: ['Task 1.1', 'Task 1.2', \"Brandon\", \"Hello\", \"hello\"], taskStatus: \"Not Started\" },\n      { _id: \"2\", name: 'Learn CSS', desc: \"Create at least a stylesheet\", tags: ['Task 2.1', 'Task 2.2'], taskStatus: \"In Progress\" },\n      { _id: \"3\", name: 'Learn JAVASCRIPT', desc: \"Create at least an APP\", tags: ['Task 3.1', 'Task 3.2'], taskStatus: \"Completed\" },\n      { _id: \"4\", name: 'Learn C++', desc: \"Create at least a programme\", tags: ['Task 3.1', 'Task 3.2'], taskStatus: \"Completed\" },\n      { _id: \"5\", name: 'Learn Python', desc: \"Create at least an AI\", tags: ['Task 3.1', 'Task 3.2'], taskStatus: \"Completed\" },\n      { _id: \"6\", name: 'Learn Haskell', desc: \"Create at least a paper\", tags: ['Task 3.1', 'Task 3.2'], taskStatus: \"Completed\" },\n      { _id: \"7\", name: 'Learn C#', desc: \"Create at least an game\", tags: ['Task 3.1', 'Task 3.2'], taskStatus: \"Completed\" },\n    ];*/\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    fetch(backend_uri + \"getdata\", requestOptions).then(response => response.json()).then(initTasks => {\n      console.log(\"initTasks: \", initTasks); // Initialise States\n\n      dispatch({\n        type: 'RESET',\n        payload: initTasks\n      });\n      setBackupData(initTasks); // Convert to SearchBox format {index, title, description, tags, taskStatus}\n\n      var initSearchData = initTasks.map(task => {\n        return {\n          _id: task._id,\n          title: task.name,\n          description: task.desc,\n          tags: task.tags,\n          taskStatus: task.taskStatus\n        };\n      });\n      setSearchData(initSearchData);\n      let initTagSet = new Array();\n      initTasks.forEach(task => {\n        task.tags.forEach(tag => {\n          initTagSet.push(tag);\n        });\n      });\n      initTagSet = Array.from(new Set(initTagSet)); // Remove duplicates\n\n      initTagSet.sort((a, b) => {\n        // Sort alphabetically\n        return a.toLowerCase() > b.toLowerCase() ? 1 : -1;\n      }); // Convert to Search Tag Dropdown Format {key, text, value}\n\n      var initsearchTagOptions = new Array();\n      initTagSet.forEach(tag => {\n        initsearchTagOptions.push({\n          key: tag,\n          text: tag,\n          value: tag\n        });\n      });\n      setSearchTagOptions(initsearchTagOptions);\n      setTagSet(initTagSet);\n    });\n  };\n\n  useEffect(initialiseData, []); // ===== Handle Searching =====\n  // Update Filters\n\n  useEffect(() => {\n    let newSearchOptions = backupData.map(task => {\n      return {\n        _id: task._id,\n        title: task.name,\n        description: task.desc,\n        tags: task.tags,\n        taskStatus: task.taskStatus\n      };\n    });\n\n    if (searchTags.length > 0) {\n      newSearchOptions = newSearchOptions.filter(task => {\n        return searchTags.every(tag => {\n          return task.tags.includes(tag);\n        });\n      });\n    }\n\n    if (searchStatus !== \"\") {\n      newSearchOptions = newSearchOptions.filter(task => {\n        return task.taskStatus === searchStatus;\n      });\n    }\n\n    setSearchData(newSearchOptions);\n  }, [searchTags, searchStatus, backupData]);\n\n  const handleSubmit = () => {\n    console.log(\"search term\", searchField);\n    let newData = backupData;\n\n    if (searchField !== \"\") {\n      newData = newData.filter(task => {\n        if (searchInDesc) {\n          return task.desc.toLowerCase().includes(searchField.toLowerCase()) || task.name.toLowerCase().includes(searchField.toLowerCase());\n        } else {\n          return task.name.toLowerCase().includes(searchField.toLowerCase());\n        }\n      });\n    }\n\n    if (searchTags.length > 0) {\n      newData = newData.filter(task => {\n        return searchTags.every(tag => {\n          return task.tags.includes(tag);\n        });\n      });\n    }\n\n    if (searchStatus !== \"\") {\n      newData = newData.filter(task => {\n        return task.taskStatus === searchStatus;\n      });\n    }\n\n    dispatch({\n      type: 'RESET',\n      payload: newData\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      stackable: true,\n      children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n        stretched: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 14,\n          children: /*#__PURE__*/_jsxDEV(Segment, {\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: handleSubmit,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                inline: true,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Search\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    width: \"40em\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(SearchBox, {\n                    source: searchData,\n                    searchInDesc: searchInDesc,\n                    updateValue: setSearchField\n                  }, JSON.stringify(searchData) + searchInDesc, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 423,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 422,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"\\xA0\\xA0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: \"flex\",\n                    alignItems: \"center\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Form.Field, {\n                    children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                      label: \"Search in Descriptions\",\n                      onChange: (e, d) => {\n                        setSearchInDesc(d.checked);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 433,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 432,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 431,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Filters\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 437,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n                  placeholder: \"Select Tags\",\n                  fluid: true,\n                  multiple: true,\n                  search: true,\n                  selection: true,\n                  onChange: (e, _ref4) => {\n                    let {\n                      value\n                    } = _ref4;\n                    setSearchTags(value);\n                  },\n                  options: searchTagOptions\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"\\xA0\\xA0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 447,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n                  placeholder: \"Select Status\",\n                  clearable: true,\n                  selection: true,\n                  options: statuses,\n                  onChange: (e, _ref5) => {\n                    let {\n                      value\n                    } = _ref5;\n                    setSearchStatus(value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 448,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"\\xA0\\xA0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 455,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Button, {\n                  content: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 456,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 2,\n          children: /*#__PURE__*/_jsxDEV(Segment, {\n            style: {\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\"\n            },\n            children: [\"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(TaskRow, {\n              taskInfo: {\n                _id: \"\",\n                name: \"\",\n                desc: \"\",\n                tags: [],\n                taskStatus: \"\"\n              },\n              tagSet: tagSet,\n              refreshCallback: initialiseData,\n              isCreate: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      celled: true,\n      selectable: true,\n      sortable: true,\n      children: [/*#__PURE__*/_jsxDEV(Table.Header, {\n        children: /*#__PURE__*/_jsxDEV(Table.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            sorted: column === 'name' ? direction : null,\n            onClick: () => {\n              dispatch({\n                type: 'CHANGE_SORT',\n                column: 'name'\n              });\n            },\n            width: 3,\n            children: \"Task Name\"\n          }, \"name\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            sorted: column === 'desc' ? direction : null,\n            onClick: () => dispatch({\n              type: 'CHANGE_SORT',\n              column: 'desc'\n            }),\n            width: 7,\n            children: \"Task Description\"\n          }, \"desc\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            sorted: column === 'tags' ? direction : null,\n            onClick: () => dispatch({\n              type: 'CHANGE_SORT',\n              column: 'tags'\n            }),\n            width: 4,\n            children: \"Tags\"\n          }, \"tags\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            sorted: column === 'taskStatus' ? direction : null,\n            onClick: () => dispatch({\n              type: 'CHANGE_SORT',\n              column: 'taskStatus'\n            }),\n            width: 2,\n            children: \"Completed\"\n          }, \"taskStatus\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n        children: data.map(rowData => /*#__PURE__*/_jsxDEV(TaskRow, {\n          taskInfo: rowData,\n          tagSet: tagSet,\n          refreshCallback: initialiseData\n        }, rowData._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 413,\n    columnNumber: 5\n  }, this);\n};\n\n_s4(TaskTable, \"V2xIHCiFBNiwiA0wcxISFjTom4c=\");\n\n_c4 = TaskTable;\n\nconst MainBodySegment = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainBodySegment\",\n    children: /*#__PURE__*/_jsxDEV(Segment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Brandon's \\\"Modern\\\" To-Do App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskTable, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 514,\n    columnNumber: 5\n  }, this);\n};\n\n_c5 = MainBodySegment;\n\nfunction App() {\n  _s5();\n\n  useEffect(() => {\n    document.title = \"Modern TODO App\";\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '3em'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"style\", {\n        children: \"body { background-color: #eddefa; }\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainBodySegment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 532,\n    columnNumber: 5\n  }, this);\n}\n\n_s5(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c6 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"TagDropDown\");\n$RefreshReg$(_c2, \"TaskRow\");\n$RefreshReg$(_c3, \"SearchBox\");\n$RefreshReg$(_c4, \"TaskTable\");\n$RefreshReg$(_c5, \"MainBodySegment\");\n$RefreshReg$(_c6, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useReducer","Helmet","Label","Table","Segment","Modal","Header","Form","TextArea","Dropdown","Button","Icon","Divider","Checkbox","Search","Grid","_","backend_uri","statuses","key","text","value","TagDropDown","props","initOptions","tagSet","forEach","tag","push","options","setOptions","handleAddition","e","console","log","handleChange","onChange","currentTags","TaskRow","open","setOpen","taskName","setTaskName","taskInfo","name","taskDesc","setTaskDesc","desc","tags","setTags","taskStatus","setTaskStatus","handleTagsChange","trigger_element","isCreate","display","flexWrap","map","padding","_id","modalHeader","target","fetch","method","headers","body","JSON","stringify","then","res","ok","refreshCallback","status","defaultProps","SearchBox","initialState","loading","results","SearchBoxReducer","state","action","type","query","selection","Error","dispatch","timeoutRef","useRef","handleSearchChange","useCallback","data","clearTimeout","current","window","setTimeout","length","re","RegExp","escapeRegExp","isMatch","searchInDesc","result","test","title","description","filter","source","updateValue","TaskTable","setTagSet","Array","sortReducer","initTable","payload","column","slice","reverse","direction","sortBy","newdata","backupData","setBackupData","searchData","setSearchData","searchTagOptions","setSearchTagOptions","searchField","setSearchField","setSearchInDesc","searchTags","setSearchTags","searchStatus","setSearchStatus","initialiseData","requestOptions","response","json","initTasks","initSearchData","task","initTagSet","from","Set","sort","a","b","toLowerCase","initsearchTagOptions","newSearchOptions","every","includes","handleSubmit","newData","width","alignItems","d","checked","justifyContent","rowData","MainBodySegment","textAlign","App","document"],"sources":["/home/brandon/Desktop/Research/Modern_Task_WAPP/react-app/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState, useReducer } from 'react';\nimport { Helmet } from \"react-helmet\";\nimport { Label, Table, Segment, Modal, Header, Form, TextArea, Dropdown, Button, Icon, Divider, Checkbox, Search, TableBody, Grid } from 'semantic-ui-react';\nimport _ from 'lodash';\nimport 'semantic-ui-css/semantic.min.css'\nimport './App.css';\n\nconst backend_uri = \"http://localhost:8000/\";\n\ninterface searchBoxRep { _id: string, title: string, description: string, tags: Array<string>, taskStatus: string };\ninterface taskRowRep { _id: string, name: string, desc: string, tags: Array<string>, taskStatus: string }\nconst statuses = [{ key: \"Not Started\", text: \"Not Started\", value: \"Not Started\" },\n{ key: \"In Progress\", text: \"In Progress\", value: \"In Progress\" },\n{ key: \"Completed\", text: \"Completed\", value: \"Completed\" }];\n\nconst TagDropDown = (props: { tagSet: Array<string>, onChange: any, currentTags: Array<string> }) => {\n  let initOptions: Array<{ key: string, text: string, value: string }> = [];\n  props.tagSet.forEach(tag => {\n    initOptions.push({ key: tag, text: tag, value: tag });\n  });\n\n  const [options, setOptions] = useState(initOptions);\n\n  const handleAddition = (e: {}, { value }: any) => {\n    console.log(\"hello\", options);\n    setOptions([{ key: value, text: value, value: value }, ...options]);\n  }\n  const handleChange = (e: {}, { value }: any) => { props.onChange(value); }\n  return (\n    <Dropdown\n      options={options}\n      value={props.currentTags}\n      placeholder='Select Tag'\n      search\n      selection\n      fluid\n      multiple\n      allowAdditions\n      onAddItem={handleAddition}\n      onChange={handleChange}\n    />\n  );\n}\n\n\nconst TaskRow = (props: { taskInfo: taskRowRep, tagSet: Array<string>, refreshCallback: any, isCreate: boolean  }) => {\n\n  const [open, setOpen] = useState<boolean>(false);\n  const [taskName, setTaskName] = useState<string>(props.taskInfo.name);\n  const [taskDesc, setTaskDesc] = useState<string>(props.taskInfo.desc);\n  const [tags, setTags] = useState<Array<string>>(props.taskInfo.tags);\n  const [taskStatus, setTaskStatus] = useState<string>(props.taskInfo.taskStatus);\n  const handleTagsChange = (tags: Array<string>) => { setTags(tags); }\n\n  let trigger_element = (!props.isCreate) ?\n    <Table.Row key={props.taskInfo._id}>\n      <Table.Cell>{props.taskInfo.name}</Table.Cell>\n      <Table.Cell>{props.taskInfo.desc}</Table.Cell>\n      <Table.Cell>\n        <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n          {props.taskInfo.tags.map((tag) =>\n            <div style={{ padding: 2 }}>\n              <Label color=\"blue\" tag>{tag}</Label>\n            </div>\n          )}\n        </div>\n      </Table.Cell>\n      <Table.Cell>\n        {\n          (props.taskInfo.taskStatus === 'Not Started') ?\n            <Label color=\"red\">{props.taskInfo.taskStatus}</Label>\n            : (props.taskInfo.taskStatus === 'In Progress') ?\n              <Label color=\"orange\">{props.taskInfo.taskStatus}</Label>\n              :\n              <Label color=\"green\">{props.taskInfo.taskStatus}</Label>\n        }\n      </Table.Cell>\n    </Table.Row>\n    : <Button icon size='huge' labelPosition='left'>\n      <Icon name='plus circle'></Icon>Add\n    </Button>;\n\n    const modalHeader = (props.isCreate) ? \"Add Task\" : \"Edit Task\";\n  return (\n    <Modal\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      closeOnDimmerClick={false}\n      closeOnEscape={false}\n      trigger={trigger_element}\n    >\n      <Modal.Header>{modalHeader}</Modal.Header>\n      <Modal.Content>\n        <Modal.Description>\n          <Header>Editing Task: {props.taskInfo.name}</Header>\n          <Form>\n            <Form.Field>\n              <label>Task Name</label>\n              <input placeholder=\"Task Name\" defaultValue={taskName} onChange={(e: any) => setTaskName(e.target.value)} />\n            </Form.Field>\n            <Form.Field>\n              <label>Task Description</label>\n              <TextArea placeholder='Task Description' defaultValue={taskDesc} onChange={(e: any) => setTaskDesc(e.target.value)} />\n            </Form.Field>\n            <Form.Field>\n              <label>Tags</label>\n              <TagDropDown tagSet={props.tagSet} currentTags={tags} onChange={handleTagsChange} />\n            </Form.Field>\n            <Form.Field>\n              <label>Task Status</label>\n              <Dropdown\n                placeholder='Select Status'\n                fluid\n                selection\n                options={statuses}\n                defaultValue={taskStatus}\n                onChange={(e: {}, { value }: any) => { setTaskStatus(value) }}\n              />\n            </Form.Field>\n          </Form>\n\n        </Modal.Description>\n      </Modal.Content>\n      <Modal.Actions>\n\n        <Button.Group floated=\"left\">\n          <Button negative onClick={() => {\n            console.log(\"Deleting Task\", taskName);\n            fetch(backend_uri + \"deletetask\", {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                _id: props.taskInfo._id,\n              })\n            })\n              .then(res => {\n                if (res.ok) {\n                  console.log(\"Task Deleted\");\n                  setOpen(false);\n                  props.refreshCallback();\n                }\n                else {\n                  console.log(\"Task Delete Failed\");\n                }\n              });\n          }}>Delete Task</Button>\n        </Button.Group>\n\n        <Button onClick={() => {\n          setOpen(false);\n          setTaskName(props.taskInfo.name);\n          setTaskDesc(props.taskInfo.desc);\n          setTags(props.taskInfo.tags);\n          setTaskStatus(props.taskInfo.taskStatus);\n        }}>Cancel</Button>\n\n        <Button color='green' onClick={() => {\n          console.log(\"Updating Task\", taskName);\n          fetch(backend_uri + \"updatetask\", {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              _id: props.taskInfo._id,\n              name: taskName,\n              desc: taskDesc,\n              tags: tags,\n              status: taskStatus\n            })\n          })\n            .then(res => {\n              if (res.ok) {\n                console.log(\"Task Updated\");\n                setOpen(false);\n                props.refreshCallback();\n              }\n              else {\n                console.log(\"Task Update Failed\");\n              }\n            });\n        }}>\n          <Icon name='checkmark' /> Save\n        </Button>\n\n\n      </Modal.Actions>\n    </Modal>);\n}\nTaskRow.defaultProps = {isCreate: false};\nfunction SearchBox(props: { source: Array<searchBoxRep>, searchInDesc: boolean, updateValue: any }) {\n  const initialState = {\n    loading: false,\n    results: [],\n    value: '',\n  }\n  function SearchBoxReducer(state: any, action: any) {\n    switch (action.type) {\n      case 'CLEAN_QUERY':\n        return initialState\n      case 'START_SEARCH':\n        return { ...state, loading: true, value: action.query }\n      case 'FINISH_SEARCH':\n        return { ...state, loading: false, results: action.results }\n      case 'UPDATE_SELECTION':\n        return { ...state, value: action.selection }\n\n      default:\n        throw new Error()\n    }\n  }\n  const [state, dispatch] = useReducer(SearchBoxReducer, initialState)\n  const { loading, results, value } = state\n\n  // Update results while typing\n  const timeoutRef = React.useRef(0)\n  const handleSearchChange = React.useCallback((e: any, data: any) => {\n    clearTimeout(timeoutRef.current)\n    dispatch({ type: 'START_SEARCH', query: data.value })\n\n    timeoutRef.current = window.setTimeout(() => {\n      if (data.value.length === 0) {\n        dispatch({ type: 'CLEAN_QUERY' })\n        return\n      }\n\n      const re = new RegExp(_.escapeRegExp(data.value), 'i');\n      const isMatch = !props.searchInDesc ? (result: any) => re.test(result.title) : (result: any) => re.test(result.title) || re.test(result.description);\n      dispatch({\n        type: 'FINISH_SEARCH',\n        results: _.filter(props.source, isMatch),\n      })\n    }, 300)\n  }, [props.source, props.searchInDesc])\n  useEffect(() => {\n    dispatch({ type: 'FINISH_SEARCH', results: props.source })\n    return () => {\n      clearTimeout(timeoutRef.current)\n    }\n  }, [props.source])\n\n  useEffect(() => { props.updateValue(value) }, [value, props]);\n\n  return (\n    <Search\n      fluid\n      size='large'\n      loading={loading}\n      placeholder='Search...'\n      onResultSelect={(e, data) => {\n        dispatch({ type: 'UPDATE_SELECTION', selection: data.result.title });\n      }}\n      onSearchChange={handleSearchChange}\n      results={results}\n      value={value}\n    />\n\n  )\n}\n\nconst TaskTable = () => {\n  const [tagSet, setTagSet] = useState<Array<string>>(new Array<string>());\n\n  // Main Table States: Sorting Column, Table Data, Sorting Direction\n  function sortReducer(state: any, action: any) {\n    switch (action.type) {\n      case 'RESET':\n        return initTable(action.payload);\n      case 'CHANGE_SORT':\n        if (state.column === action.column) {\n          return {\n            ...state,\n            data: state.data.slice().reverse(),\n            direction:\n              state.direction === 'ascending' ? 'descending' : 'ascending',\n          }\n        }\n\n        return {\n          column: action.column,\n          data: _.sortBy(state.data, [action.column]),\n          direction: 'ascending',\n        }\n      default:\n        throw new Error()\n    }\n  }\n  const initTable = (newdata: Array<taskRowRep>) => {\n    return { column: null, data: newdata, direction: null };\n  }\n  const [backupData, setBackupData] = useState<Array<taskRowRep>>(new Array<taskRowRep>());\n  const [state, dispatch] = useReducer(sortReducer, [], initTable); // here state = {column, data, dir}\n  const { column, data, direction } = state;\n\n  // Searching States\n  const [searchData, setSearchData] = useState<Array<searchBoxRep>>([]);\n  const [searchTagOptions, setSearchTagOptions] = useState<Array<{ key: string, text: string, value: string }>>([]);\n  const [searchField, setSearchField] = useState<string>(\"\");\n  const [searchInDesc, setSearchInDesc] = useState<boolean>(false);\n  const [searchTags, setSearchTags] = useState<Array<string>>([]);\n  const [searchStatus, setSearchStatus] = useState<string>(\"\");\n\n  // Initial Set-Up, to replace with backend query\n  const initialiseData = () => {\n    /*\n    let initTasks: Array<taskRowRep> = [\n      { _id: \"1\", name: 'Learn HTML', desc: \"Create at least something\", tags: ['Task 1.1', 'Task 1.2', \"Brandon\", \"Hello\", \"hello\"], taskStatus: \"Not Started\" },\n      { _id: \"2\", name: 'Learn CSS', desc: \"Create at least a stylesheet\", tags: ['Task 2.1', 'Task 2.2'], taskStatus: \"In Progress\" },\n      { _id: \"3\", name: 'Learn JAVASCRIPT', desc: \"Create at least an APP\", tags: ['Task 3.1', 'Task 3.2'], taskStatus: \"Completed\" },\n      { _id: \"4\", name: 'Learn C++', desc: \"Create at least a programme\", tags: ['Task 3.1', 'Task 3.2'], taskStatus: \"Completed\" },\n      { _id: \"5\", name: 'Learn Python', desc: \"Create at least an AI\", tags: ['Task 3.1', 'Task 3.2'], taskStatus: \"Completed\" },\n      { _id: \"6\", name: 'Learn Haskell', desc: \"Create at least a paper\", tags: ['Task 3.1', 'Task 3.2'], taskStatus: \"Completed\" },\n      { _id: \"7\", name: 'Learn C#', desc: \"Create at least an game\", tags: ['Task 3.1', 'Task 3.2'], taskStatus: \"Completed\" },\n    ];*/\n\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n    };\n    fetch(backend_uri + \"getdata\", requestOptions)\n      .then(response => response.json())\n      .then(initTasks => {\n        console.log(\"initTasks: \", initTasks);\n        // Initialise States\n        dispatch({ type: 'RESET', payload: initTasks });\n        setBackupData(initTasks);\n        // Convert to SearchBox format {index, title, description, tags, taskStatus}\n        var initSearchData: Array<searchBoxRep> =\n          initTasks.map((task: taskRowRep) => { return { _id: task._id, title: task.name, description: task.desc, tags: task.tags, taskStatus: task.taskStatus } });\n        setSearchData(initSearchData);\n\n        let initTagSet = new Array<string>();\n        initTasks.forEach((task: taskRowRep) => {\n          task.tags.forEach(tag => {\n            initTagSet.push(tag);\n          });\n        });\n        initTagSet = Array.from(new Set(initTagSet)); // Remove duplicates\n        initTagSet.sort((a, b) => {                   // Sort alphabetically\n          return (a.toLowerCase() > b.toLowerCase()) ? 1 : -1;\n        });\n\n        // Convert to Search Tag Dropdown Format {key, text, value}\n        var initsearchTagOptions = new Array<{ key: string, text: string, value: string }>();\n        initTagSet.forEach(tag => {\n          initsearchTagOptions.push({ key: tag, text: tag, value: tag });\n        });\n\n        setSearchTagOptions(initsearchTagOptions);\n        setTagSet(initTagSet);\n      });\n  }\n\n  useEffect(initialiseData, []);\n\n  // ===== Handle Searching =====\n  // Update Filters\n\n  useEffect(() => {\n    let newSearchOptions: Array<searchBoxRep> =\n      backupData.map((task: taskRowRep) => { return { _id: task._id, title: task.name, description: task.desc, tags: task.tags, taskStatus: task.taskStatus } });\n\n    if (searchTags.length > 0) {\n      newSearchOptions = newSearchOptions.filter(task => {\n        return searchTags.every(tag => {\n          return task.tags.includes(tag);\n        });\n      });\n    }\n\n    if (searchStatus !== \"\") {\n      newSearchOptions = newSearchOptions.filter(task => {\n        return task.taskStatus === searchStatus;\n      });\n    }\n    setSearchData(newSearchOptions);\n  }, [searchTags, searchStatus, backupData]);\n\n  const handleSubmit = () => {\n    console.log(\"search term\", searchField);\n    let newData = backupData;\n    if (searchField !== \"\") {\n      newData = newData.filter(task => {\n        if (searchInDesc) {\n          return (task.desc.toLowerCase().includes(searchField.toLowerCase()) || task.name.toLowerCase().includes(searchField.toLowerCase()));\n        } else {\n          return task.name.toLowerCase().includes(searchField.toLowerCase());\n        }\n      });\n    }\n    if (searchTags.length > 0) {\n      newData = newData.filter(task => {\n        return searchTags.every(tag => {\n          return task.tags.includes(tag);\n        });\n      });\n    }\n\n    if (searchStatus !== \"\") {\n      newData = newData.filter(task => {\n        return task.taskStatus === searchStatus;\n      });\n    }\n\n    dispatch({ type: 'RESET', payload: newData });\n  }\n\n\n  return (\n    <div>\n      <Grid stackable>\n        <Grid.Row stretched >\n          <Grid.Column width={14}>\n            <Segment>\n              <Form onSubmit={handleSubmit}>\n                <Form.Group inline>\n\n                  <label>Search</label>\n                  <div style={{ width: \"40em\" }}>\n                    <SearchBox\n                      key={JSON.stringify(searchData) + searchInDesc}\n                      source={searchData}\n                      searchInDesc={searchInDesc}\n                      updateValue={setSearchField} />\n                  </div>\n\n                  <div>&nbsp;&nbsp;</div>\n                  <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                    <Form.Field  >\n                      <Checkbox label='Search in Descriptions' onChange={(e: any, d: any) => { setSearchInDesc(d.checked); }} />\n                    </Form.Field>\n                  </div>\n\n                  <label>Filters</label>\n                  <Dropdown\n                    placeholder='Select Tags'\n                    fluid\n                    multiple\n                    search\n                    selection\n                    onChange={(e: {}, { value }: any) => { setSearchTags(value); }}\n                    options={searchTagOptions}\n                  />\n                  <div>&nbsp;&nbsp;</div>\n                  <Dropdown\n                    placeholder='Select Status'\n                    clearable\n                    selection\n                    options={statuses}\n                    onChange={(e: {}, { value }: any) => { setSearchStatus(value); }}\n                  />\n                  <div>&nbsp;&nbsp;</div>\n                  <Form.Button content='Submit' />\n                </Form.Group>\n              </Form>\n            </Segment>\n          </Grid.Column>\n          <Grid.Column width={2} >\n            <Segment style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n              &nbsp;&nbsp;\n              <TaskRow taskInfo={{_id:\"\", name:\"\", desc:\"\",tags:[],taskStatus:\"\"}} tagSet={tagSet} refreshCallback={initialiseData} isCreate={true}/>\n            </Segment>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n      <Table celled selectable sortable>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell\n              sorted={column === 'name' ? direction : null}\n              onClick={() => {\n                dispatch({ type: 'CHANGE_SORT', column: 'name' });\n              }}\n              key=\"name\"\n              width={3}\n            >Task Name</Table.HeaderCell>\n            <Table.HeaderCell\n              sorted={column === 'desc' ? direction : null}\n              onClick={() => dispatch({ type: 'CHANGE_SORT', column: 'desc' })}\n              key=\"desc\"\n              width={7}\n            >Task Description</Table.HeaderCell>\n            <Table.HeaderCell\n              sorted={column === 'tags' ? direction : null}\n              onClick={() => dispatch({ type: 'CHANGE_SORT', column: 'tags' })}\n              key=\"tags\"\n              width={4}\n            >Tags</Table.HeaderCell>\n            <Table.HeaderCell\n              sorted={column === 'taskStatus' ? direction : null}\n              onClick={() => dispatch({ type: 'CHANGE_SORT', column: 'taskStatus' })}\n              key=\"taskStatus\"\n              width={2}\n            >Completed</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {data.map((rowData: taskRowRep) =>\n            <TaskRow key={rowData._id} taskInfo={rowData} tagSet={tagSet} refreshCallback={initialiseData}></TaskRow>\n          )}\n        </Table.Body>\n      </Table>\n    </div>\n\n  );\n}\n\nconst MainBodySegment = () => {\n  return (\n    <div className=\"mainBodySegment\">\n      <Segment>\n        <div style={{ textAlign: 'center' }}>\n          <h1>Brandon's \"Modern\" To-Do App</h1>\n        </div>\n        <Divider></Divider>\n        <TaskTable />\n      </Segment >\n    </div >\n  );\n}\n\nfunction App() {\n  useEffect(() => {\n    document.title = \"Modern TODO App\";\n  });\n\n  return (\n    <div\n      style={{\n        padding: '3em',\n      }} >\n      <Helmet>\n        <style>{\"body { background-color: #eddefa; }\"}</style>\n      </Helmet>\n\n      <MainBodySegment />\n    </div >\n  );\n}\n\nexport default App;"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,OAAvB,EAAgCC,KAAhC,EAAuCC,MAAvC,EAA+CC,IAA/C,EAAqDC,QAArD,EAA+DC,QAA/D,EAAyEC,MAAzE,EAAiFC,IAAjF,EAAuFC,OAAvF,EAAgGC,QAAhG,EAA0GC,MAA1G,EAA6HC,IAA7H,QAAyI,mBAAzI;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAO,kCAAP;AACA,OAAO,WAAP;;AAEA,MAAMC,WAAW,GAAG,wBAApB;AAEmH;AAEnH,MAAMC,QAAQ,GAAG,CAAC;EAAEC,GAAG,EAAE,aAAP;EAAsBC,IAAI,EAAE,aAA5B;EAA2CC,KAAK,EAAE;AAAlD,CAAD,EACjB;EAAEF,GAAG,EAAE,aAAP;EAAsBC,IAAI,EAAE,aAA5B;EAA2CC,KAAK,EAAE;AAAlD,CADiB,EAEjB;EAAEF,GAAG,EAAE,WAAP;EAAoBC,IAAI,EAAE,WAA1B;EAAuCC,KAAK,EAAE;AAA9C,CAFiB,CAAjB;;AAIA,MAAMC,WAAW,GAAIC,KAAD,IAAiF;EAAA;;EACnG,IAAIC,WAAgE,GAAG,EAAvE;EACAD,KAAK,CAACE,MAAN,CAAaC,OAAb,CAAqBC,GAAG,IAAI;IAC1BH,WAAW,CAACI,IAAZ,CAAiB;MAAET,GAAG,EAAEQ,GAAP;MAAYP,IAAI,EAAEO,GAAlB;MAAuBN,KAAK,EAAEM;IAA9B,CAAjB;EACD,CAFD;EAIA,MAAM,CAACE,OAAD,EAAUC,UAAV,IAAwB/B,QAAQ,CAACyB,WAAD,CAAtC;;EAEA,MAAMO,cAAc,GAAG,CAACC,CAAD,WAA2B;IAAA,IAAnB;MAAEX;IAAF,CAAmB;IAChDY,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBL,OAArB;IACAC,UAAU,CAAC,CAAC;MAAEX,GAAG,EAAEE,KAAP;MAAcD,IAAI,EAAEC,KAApB;MAA2BA,KAAK,EAAEA;IAAlC,CAAD,EAA4C,GAAGQ,OAA/C,CAAD,CAAV;EACD,CAHD;;EAIA,MAAMM,YAAY,GAAG,CAACH,CAAD,YAA2B;IAAA,IAAnB;MAAEX;IAAF,CAAmB;IAAEE,KAAK,CAACa,QAAN,CAAef,KAAf;EAAwB,CAA1E;;EACA,oBACE,QAAC,QAAD;IACE,OAAO,EAAEQ,OADX;IAEE,KAAK,EAAEN,KAAK,CAACc,WAFf;IAGE,WAAW,EAAC,YAHd;IAIE,MAAM,MAJR;IAKE,SAAS,MALX;IAME,KAAK,MANP;IAOE,QAAQ,MAPV;IAQE,cAAc,MARhB;IASE,SAAS,EAAEN,cATb;IAUE,QAAQ,EAAEI;EAVZ;IAAA;IAAA;IAAA;EAAA,QADF;AAcD,CA3BD;;GAAMb,W;;KAAAA,W;;AA8BN,MAAMgB,OAAO,GAAIf,KAAD,IAAsG;EAAA;;EAEpH,MAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkBzC,QAAQ,CAAU,KAAV,CAAhC;EACA,MAAM,CAAC0C,QAAD,EAAWC,WAAX,IAA0B3C,QAAQ,CAASwB,KAAK,CAACoB,QAAN,CAAeC,IAAxB,CAAxC;EACA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0B/C,QAAQ,CAASwB,KAAK,CAACoB,QAAN,CAAeI,IAAxB,CAAxC;EACA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBlD,QAAQ,CAAgBwB,KAAK,CAACoB,QAAN,CAAeK,IAA/B,CAAhC;EACA,MAAM,CAACE,UAAD,EAAaC,aAAb,IAA8BpD,QAAQ,CAASwB,KAAK,CAACoB,QAAN,CAAeO,UAAxB,CAA5C;;EACA,MAAME,gBAAgB,GAAIJ,IAAD,IAAyB;IAAEC,OAAO,CAACD,IAAD,CAAP;EAAgB,CAApE;;EAEA,IAAIK,eAAe,GAAI,CAAC9B,KAAK,CAAC+B,QAAR,gBACpB,QAAC,KAAD,CAAO,GAAP;IAAA,wBACE,QAAC,KAAD,CAAO,IAAP;MAAA,UAAa/B,KAAK,CAACoB,QAAN,CAAeC;IAA5B;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,KAAD,CAAO,IAAP;MAAA,UAAarB,KAAK,CAACoB,QAAN,CAAeI;IAA5B;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,KAAD,CAAO,IAAP;MAAA,uBACE;QAAK,KAAK,EAAE;UAAEQ,OAAO,EAAE,MAAX;UAAmBC,QAAQ,EAAE;QAA7B,CAAZ;QAAA,UACGjC,KAAK,CAACoB,QAAN,CAAeK,IAAf,CAAoBS,GAApB,CAAyB9B,GAAD,iBACvB;UAAK,KAAK,EAAE;YAAE+B,OAAO,EAAE;UAAX,CAAZ;UAAA,uBACE,QAAC,KAAD;YAAO,KAAK,EAAC,MAAb;YAAoB,GAAG,MAAvB;YAAA,UAAyB/B;UAAzB;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QADD;MADH;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAHF,eAYE,QAAC,KAAD,CAAO,IAAP;MAAA,UAEKJ,KAAK,CAACoB,QAAN,CAAeO,UAAf,KAA8B,aAA/B,gBACE,QAAC,KAAD;QAAO,KAAK,EAAC,KAAb;QAAA,UAAoB3B,KAAK,CAACoB,QAAN,CAAeO;MAAnC;QAAA;QAAA;QAAA;MAAA,QADF,GAEK3B,KAAK,CAACoB,QAAN,CAAeO,UAAf,KAA8B,aAA/B,gBACA,QAAC,KAAD;QAAO,KAAK,EAAC,QAAb;QAAA,UAAuB3B,KAAK,CAACoB,QAAN,CAAeO;MAAtC;QAAA;QAAA;QAAA;MAAA,QADA,gBAGA,QAAC,KAAD;QAAO,KAAK,EAAC,OAAb;QAAA,UAAsB3B,KAAK,CAACoB,QAAN,CAAeO;MAArC;QAAA;QAAA;QAAA;MAAA;IAPR;MAAA;MAAA;MAAA;IAAA,QAZF;EAAA,GAAgB3B,KAAK,CAACoB,QAAN,CAAegB,GAA/B;IAAA;IAAA;IAAA;EAAA,QADoB,gBAwBlB,QAAC,MAAD;IAAQ,IAAI,MAAZ;IAAa,IAAI,EAAC,MAAlB;IAAyB,aAAa,EAAC,MAAvC;IAAA,wBACA,QAAC,IAAD;MAAM,IAAI,EAAC;IAAX;MAAA;MAAA;MAAA;IAAA,QADA;EAAA;IAAA;IAAA;IAAA;EAAA,QAxBJ;EA4BE,MAAMC,WAAW,GAAIrC,KAAK,CAAC+B,QAAP,GAAmB,UAAnB,GAAgC,WAApD;EACF,oBACE,QAAC,KAAD;IACE,OAAO,EAAE,MAAMd,OAAO,CAAC,KAAD,CADxB;IAEE,MAAM,EAAE,MAAMA,OAAO,CAAC,IAAD,CAFvB;IAGE,IAAI,EAAED,IAHR;IAIE,kBAAkB,EAAE,KAJtB;IAKE,aAAa,EAAE,KALjB;IAME,OAAO,EAAEc,eANX;IAAA,wBAQE,QAAC,KAAD,CAAO,MAAP;MAAA,UAAeO;IAAf;MAAA;MAAA;MAAA;IAAA,QARF,eASE,QAAC,KAAD,CAAO,OAAP;MAAA,uBACE,QAAC,KAAD,CAAO,WAAP;QAAA,wBACE,QAAC,MAAD;UAAA,6BAAuBrC,KAAK,CAACoB,QAAN,CAAeC,IAAtC;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,IAAD;UAAA,wBACE,QAAC,IAAD,CAAM,KAAN;YAAA,wBACE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADF,eAEE;cAAO,WAAW,EAAC,WAAnB;cAA+B,YAAY,EAAEH,QAA7C;cAAuD,QAAQ,EAAGT,CAAD,IAAYU,WAAW,CAACV,CAAC,CAAC6B,MAAF,CAASxC,KAAV;YAAxF;cAAA;cAAA;cAAA;YAAA,QAFF;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAKE,QAAC,IAAD,CAAM,KAAN;YAAA,wBACE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADF,eAEE,QAAC,QAAD;cAAU,WAAW,EAAC,kBAAtB;cAAyC,YAAY,EAAEwB,QAAvD;cAAiE,QAAQ,EAAGb,CAAD,IAAYc,WAAW,CAACd,CAAC,CAAC6B,MAAF,CAASxC,KAAV;YAAlG;cAAA;cAAA;cAAA;YAAA,QAFF;UAAA;YAAA;YAAA;YAAA;UAAA,QALF,eASE,QAAC,IAAD,CAAM,KAAN;YAAA,wBACE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADF,eAEE,QAAC,WAAD;cAAa,MAAM,EAAEE,KAAK,CAACE,MAA3B;cAAmC,WAAW,EAAEuB,IAAhD;cAAsD,QAAQ,EAAEI;YAAhE;cAAA;cAAA;cAAA;YAAA,QAFF;UAAA;YAAA;YAAA;YAAA;UAAA,QATF,eAaE,QAAC,IAAD,CAAM,KAAN;YAAA,wBACE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADF,eAEE,QAAC,QAAD;cACE,WAAW,EAAC,eADd;cAEE,KAAK,MAFP;cAGE,SAAS,MAHX;cAIE,OAAO,EAAElC,QAJX;cAKE,YAAY,EAAEgC,UALhB;cAME,QAAQ,EAAE,CAAClB,CAAD,YAA2B;gBAAA,IAAnB;kBAAEX;gBAAF,CAAmB;gBAAE8B,aAAa,CAAC9B,KAAD,CAAb;cAAsB;YAN/D;cAAA;cAAA;cAAA;YAAA,QAFF;UAAA;YAAA;YAAA;YAAA;UAAA,QAbF;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QATF,eAwCE,QAAC,KAAD,CAAO,OAAP;MAAA,wBAEE,QAAC,MAAD,CAAQ,KAAR;QAAc,OAAO,EAAC,MAAtB;QAAA,uBACE,QAAC,MAAD;UAAQ,QAAQ,MAAhB;UAAiB,OAAO,EAAE,MAAM;YAC9BY,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BO,QAA7B;YACAqB,KAAK,CAAC7C,WAAW,GAAG,YAAf,EAA6B;cAChC8C,MAAM,EAAE,MADwB;cAEhCC,OAAO,EAAE;gBACP,gBAAgB;cADT,CAFuB;cAKhCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;gBACnBR,GAAG,EAAEpC,KAAK,CAACoB,QAAN,CAAegB;cADD,CAAf;YAL0B,CAA7B,CAAL,CASGS,IATH,CASQC,GAAG,IAAI;cACX,IAAIA,GAAG,CAACC,EAAR,EAAY;gBACVrC,OAAO,CAACC,GAAR,CAAY,cAAZ;gBACAM,OAAO,CAAC,KAAD,CAAP;gBACAjB,KAAK,CAACgD,eAAN;cACD,CAJD,MAKK;gBACHtC,OAAO,CAACC,GAAR,CAAY,oBAAZ;cACD;YACF,CAlBH;UAmBD,CArBD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAFF,eA2BE,QAAC,MAAD;QAAQ,OAAO,EAAE,MAAM;UACrBM,OAAO,CAAC,KAAD,CAAP;UACAE,WAAW,CAACnB,KAAK,CAACoB,QAAN,CAAeC,IAAhB,CAAX;UACAE,WAAW,CAACvB,KAAK,CAACoB,QAAN,CAAeI,IAAhB,CAAX;UACAE,OAAO,CAAC1B,KAAK,CAACoB,QAAN,CAAeK,IAAhB,CAAP;UACAG,aAAa,CAAC5B,KAAK,CAACoB,QAAN,CAAeO,UAAhB,CAAb;QACD,CAND;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QA3BF,eAmCE,QAAC,MAAD;QAAQ,KAAK,EAAC,OAAd;QAAsB,OAAO,EAAE,MAAM;UACnCjB,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BO,QAA7B;UACAqB,KAAK,CAAC7C,WAAW,GAAG,YAAf,EAA6B;YAChC8C,MAAM,EAAE,MADwB;YAEhCC,OAAO,EAAE;cACP,gBAAgB;YADT,CAFuB;YAKhCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;cACnBR,GAAG,EAAEpC,KAAK,CAACoB,QAAN,CAAegB,GADD;cAEnBf,IAAI,EAAEH,QAFa;cAGnBM,IAAI,EAAEF,QAHa;cAInBG,IAAI,EAAEA,IAJa;cAKnBwB,MAAM,EAAEtB;YALW,CAAf;UAL0B,CAA7B,CAAL,CAaGkB,IAbH,CAaQC,GAAG,IAAI;YACX,IAAIA,GAAG,CAACC,EAAR,EAAY;cACVrC,OAAO,CAACC,GAAR,CAAY,cAAZ;cACAM,OAAO,CAAC,KAAD,CAAP;cACAjB,KAAK,CAACgD,eAAN;YACD,CAJD,MAKK;cACHtC,OAAO,CAACC,GAAR,CAAY,oBAAZ;YACD;UACF,CAtBH;QAuBD,CAzBD;QAAA,wBA0BE,QAAC,IAAD;UAAM,IAAI,EAAC;QAAX;UAAA;UAAA;UAAA;QAAA,QA1BF;MAAA;QAAA;QAAA;QAAA;MAAA,QAnCF;IAAA;MAAA;MAAA;MAAA;IAAA,QAxCF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA4GD,CAlJD;;IAAMI,O;;MAAAA,O;AAmJNA,OAAO,CAACmC,YAAR,GAAuB;EAACnB,QAAQ,EAAE;AAAX,CAAvB;;AACA,SAASoB,SAAT,CAAmBnD,KAAnB,EAAoG;EAAA;;EAClG,MAAMoD,YAAY,GAAG;IACnBC,OAAO,EAAE,KADU;IAEnBC,OAAO,EAAE,EAFU;IAGnBxD,KAAK,EAAE;EAHY,CAArB;;EAKA,SAASyD,gBAAT,CAA0BC,KAA1B,EAAsCC,MAAtC,EAAmD;IACjD,QAAQA,MAAM,CAACC,IAAf;MACE,KAAK,aAAL;QACE,OAAON,YAAP;;MACF,KAAK,cAAL;QACE,OAAO,EAAE,GAAGI,KAAL;UAAYH,OAAO,EAAE,IAArB;UAA2BvD,KAAK,EAAE2D,MAAM,CAACE;QAAzC,CAAP;;MACF,KAAK,eAAL;QACE,OAAO,EAAE,GAAGH,KAAL;UAAYH,OAAO,EAAE,KAArB;UAA4BC,OAAO,EAAEG,MAAM,CAACH;QAA5C,CAAP;;MACF,KAAK,kBAAL;QACE,OAAO,EAAE,GAAGE,KAAL;UAAY1D,KAAK,EAAE2D,MAAM,CAACG;QAA1B,CAAP;;MAEF;QACE,MAAM,IAAIC,KAAJ,EAAN;IAXJ;EAaD;;EACD,MAAM,CAACL,KAAD,EAAQM,QAAR,IAAoBrF,UAAU,CAAC8E,gBAAD,EAAmBH,YAAnB,CAApC;EACA,MAAM;IAAEC,OAAF;IAAWC,OAAX;IAAoBxD;EAApB,IAA8B0D,KAApC,CAtBkG,CAwBlG;;EACA,MAAMO,UAAU,GAAGzF,KAAK,CAAC0F,MAAN,CAAa,CAAb,CAAnB;EACA,MAAMC,kBAAkB,GAAG3F,KAAK,CAAC4F,WAAN,CAAkB,CAACzD,CAAD,EAAS0D,IAAT,KAAuB;IAClEC,YAAY,CAACL,UAAU,CAACM,OAAZ,CAAZ;IACAP,QAAQ,CAAC;MAAEJ,IAAI,EAAE,cAAR;MAAwBC,KAAK,EAAEQ,IAAI,CAACrE;IAApC,CAAD,CAAR;IAEAiE,UAAU,CAACM,OAAX,GAAqBC,MAAM,CAACC,UAAP,CAAkB,MAAM;MAC3C,IAAIJ,IAAI,CAACrE,KAAL,CAAW0E,MAAX,KAAsB,CAA1B,EAA6B;QAC3BV,QAAQ,CAAC;UAAEJ,IAAI,EAAE;QAAR,CAAD,CAAR;QACA;MACD;;MAED,MAAMe,EAAE,GAAG,IAAIC,MAAJ,CAAWjF,CAAC,CAACkF,YAAF,CAAeR,IAAI,CAACrE,KAApB,CAAX,EAAuC,GAAvC,CAAX;MACA,MAAM8E,OAAO,GAAG,CAAC5E,KAAK,CAAC6E,YAAP,GAAuBC,MAAD,IAAiBL,EAAE,CAACM,IAAH,CAAQD,MAAM,CAACE,KAAf,CAAvC,GAAgEF,MAAD,IAAiBL,EAAE,CAACM,IAAH,CAAQD,MAAM,CAACE,KAAf,KAAyBP,EAAE,CAACM,IAAH,CAAQD,MAAM,CAACG,WAAf,CAAzH;MACAnB,QAAQ,CAAC;QACPJ,IAAI,EAAE,eADC;QAEPJ,OAAO,EAAE7D,CAAC,CAACyF,MAAF,CAASlF,KAAK,CAACmF,MAAf,EAAuBP,OAAvB;MAFF,CAAD,CAAR;IAID,CAZoB,EAYlB,GAZkB,CAArB;EAaD,CAjB0B,EAiBxB,CAAC5E,KAAK,CAACmF,MAAP,EAAenF,KAAK,CAAC6E,YAArB,CAjBwB,CAA3B;EAkBAtG,SAAS,CAAC,MAAM;IACduF,QAAQ,CAAC;MAAEJ,IAAI,EAAE,eAAR;MAAyBJ,OAAO,EAAEtD,KAAK,CAACmF;IAAxC,CAAD,CAAR;IACA,OAAO,MAAM;MACXf,YAAY,CAACL,UAAU,CAACM,OAAZ,CAAZ;IACD,CAFD;EAGD,CALQ,EAKN,CAACrE,KAAK,CAACmF,MAAP,CALM,CAAT;EAOA5G,SAAS,CAAC,MAAM;IAAEyB,KAAK,CAACoF,WAAN,CAAkBtF,KAAlB;EAA0B,CAAnC,EAAqC,CAACA,KAAD,EAAQE,KAAR,CAArC,CAAT;EAEA,oBACE,QAAC,MAAD;IACE,KAAK,MADP;IAEE,IAAI,EAAC,OAFP;IAGE,OAAO,EAAEqD,OAHX;IAIE,WAAW,EAAC,WAJd;IAKE,cAAc,EAAE,CAAC5C,CAAD,EAAI0D,IAAJ,KAAa;MAC3BL,QAAQ,CAAC;QAAEJ,IAAI,EAAE,kBAAR;QAA4BE,SAAS,EAAEO,IAAI,CAACW,MAAL,CAAYE;MAAnD,CAAD,CAAR;IACD,CAPH;IAQE,cAAc,EAAEf,kBARlB;IASE,OAAO,EAAEX,OATX;IAUE,KAAK,EAAExD;EAVT;IAAA;IAAA;IAAA;EAAA,QADF;AAeD;;IApEQqD,S;;MAAAA,S;;AAsET,MAAMkC,SAAS,GAAG,MAAM;EAAA;;EACtB,MAAM,CAACnF,MAAD,EAASoF,SAAT,IAAsB9G,QAAQ,CAAgB,IAAI+G,KAAJ,EAAhB,CAApC,CADsB,CAGtB;;EACA,SAASC,WAAT,CAAqBhC,KAArB,EAAiCC,MAAjC,EAA8C;IAC5C,QAAQA,MAAM,CAACC,IAAf;MACE,KAAK,OAAL;QACE,OAAO+B,SAAS,CAAChC,MAAM,CAACiC,OAAR,CAAhB;;MACF,KAAK,aAAL;QACE,IAAIlC,KAAK,CAACmC,MAAN,KAAiBlC,MAAM,CAACkC,MAA5B,EAAoC;UAClC,OAAO,EACL,GAAGnC,KADE;YAELW,IAAI,EAAEX,KAAK,CAACW,IAAN,CAAWyB,KAAX,GAAmBC,OAAnB,EAFD;YAGLC,SAAS,EACPtC,KAAK,CAACsC,SAAN,KAAoB,WAApB,GAAkC,YAAlC,GAAiD;UAJ9C,CAAP;QAMD;;QAED,OAAO;UACLH,MAAM,EAAElC,MAAM,CAACkC,MADV;UAELxB,IAAI,EAAE1E,CAAC,CAACsG,MAAF,CAASvC,KAAK,CAACW,IAAf,EAAqB,CAACV,MAAM,CAACkC,MAAR,CAArB,CAFD;UAGLG,SAAS,EAAE;QAHN,CAAP;;MAKF;QACE,MAAM,IAAIjC,KAAJ,EAAN;IAnBJ;EAqBD;;EACD,MAAM4B,SAAS,GAAIO,OAAD,IAAgC;IAChD,OAAO;MAAEL,MAAM,EAAE,IAAV;MAAgBxB,IAAI,EAAE6B,OAAtB;MAA+BF,SAAS,EAAE;IAA1C,CAAP;EACD,CAFD;;EAGA,MAAM,CAACG,UAAD,EAAaC,aAAb,IAA8B1H,QAAQ,CAAoB,IAAI+G,KAAJ,EAApB,CAA5C;EACA,MAAM,CAAC/B,KAAD,EAAQM,QAAR,IAAoBrF,UAAU,CAAC+G,WAAD,EAAc,EAAd,EAAkBC,SAAlB,CAApC,CA/BsB,CA+B4C;;EAClE,MAAM;IAAEE,MAAF;IAAUxB,IAAV;IAAgB2B;EAAhB,IAA8BtC,KAApC,CAhCsB,CAkCtB;;EACA,MAAM,CAAC2C,UAAD,EAAaC,aAAb,IAA8B5H,QAAQ,CAAsB,EAAtB,CAA5C;EACA,MAAM,CAAC6H,gBAAD,EAAmBC,mBAAnB,IAA0C9H,QAAQ,CAAsD,EAAtD,CAAxD;EACA,MAAM,CAAC+H,WAAD,EAAcC,cAAd,IAAgChI,QAAQ,CAAS,EAAT,CAA9C;EACA,MAAM,CAACqG,YAAD,EAAe4B,eAAf,IAAkCjI,QAAQ,CAAU,KAAV,CAAhD;EACA,MAAM,CAACkI,UAAD,EAAaC,aAAb,IAA8BnI,QAAQ,CAAgB,EAAhB,CAA5C;EACA,MAAM,CAACoI,YAAD,EAAeC,eAAf,IAAkCrI,QAAQ,CAAS,EAAT,CAAhD,CAxCsB,CA0CtB;;EACA,MAAMsI,cAAc,GAAG,MAAM;IAC3B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAEI,MAAMC,cAAc,GAAG;MACrBvE,MAAM,EAAE,MADa;MAErBC,OAAO,EAAE;QAAE,gBAAgB;MAAlB;IAFY,CAAvB;IAIAF,KAAK,CAAC7C,WAAW,GAAG,SAAf,EAA0BqH,cAA1B,CAAL,CACGlE,IADH,CACQmE,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGpE,IAFH,CAEQqE,SAAS,IAAI;MACjBxG,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BuG,SAA3B,EADiB,CAEjB;;MACApD,QAAQ,CAAC;QAAEJ,IAAI,EAAE,OAAR;QAAiBgC,OAAO,EAAEwB;MAA1B,CAAD,CAAR;MACAhB,aAAa,CAACgB,SAAD,CAAb,CAJiB,CAKjB;;MACA,IAAIC,cAAmC,GACrCD,SAAS,CAAChF,GAAV,CAAekF,IAAD,IAAsB;QAAE,OAAO;UAAEhF,GAAG,EAAEgF,IAAI,CAAChF,GAAZ;UAAiB4C,KAAK,EAAEoC,IAAI,CAAC/F,IAA7B;UAAmC4D,WAAW,EAAEmC,IAAI,CAAC5F,IAArD;UAA2DC,IAAI,EAAE2F,IAAI,CAAC3F,IAAtE;UAA4EE,UAAU,EAAEyF,IAAI,CAACzF;QAA7F,CAAP;MAAkH,CAAxJ,CADF;MAEAyE,aAAa,CAACe,cAAD,CAAb;MAEA,IAAIE,UAAU,GAAG,IAAI9B,KAAJ,EAAjB;MACA2B,SAAS,CAAC/G,OAAV,CAAmBiH,IAAD,IAAsB;QACtCA,IAAI,CAAC3F,IAAL,CAAUtB,OAAV,CAAkBC,GAAG,IAAI;UACvBiH,UAAU,CAAChH,IAAX,CAAgBD,GAAhB;QACD,CAFD;MAGD,CAJD;MAKAiH,UAAU,GAAG9B,KAAK,CAAC+B,IAAN,CAAW,IAAIC,GAAJ,CAAQF,UAAR,CAAX,CAAb,CAhBiB,CAgB6B;;MAC9CA,UAAU,CAACG,IAAX,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAU;QAAoB;QAC5C,OAAQD,CAAC,CAACE,WAAF,KAAkBD,CAAC,CAACC,WAAF,EAAnB,GAAsC,CAAtC,GAA0C,CAAC,CAAlD;MACD,CAFD,EAjBiB,CAqBjB;;MACA,IAAIC,oBAAoB,GAAG,IAAIrC,KAAJ,EAA3B;MACA8B,UAAU,CAAClH,OAAX,CAAmBC,GAAG,IAAI;QACxBwH,oBAAoB,CAACvH,IAArB,CAA0B;UAAET,GAAG,EAAEQ,GAAP;UAAYP,IAAI,EAAEO,GAAlB;UAAuBN,KAAK,EAAEM;QAA9B,CAA1B;MACD,CAFD;MAIAkG,mBAAmB,CAACsB,oBAAD,CAAnB;MACAtC,SAAS,CAAC+B,UAAD,CAAT;IACD,CA/BH;EAgCD,CAhDD;;EAkDA9I,SAAS,CAACuI,cAAD,EAAiB,EAAjB,CAAT,CA7FsB,CA+FtB;EACA;;EAEAvI,SAAS,CAAC,MAAM;IACd,IAAIsJ,gBAAqC,GACvC5B,UAAU,CAAC/D,GAAX,CAAgBkF,IAAD,IAAsB;MAAE,OAAO;QAAEhF,GAAG,EAAEgF,IAAI,CAAChF,GAAZ;QAAiB4C,KAAK,EAAEoC,IAAI,CAAC/F,IAA7B;QAAmC4D,WAAW,EAAEmC,IAAI,CAAC5F,IAArD;QAA2DC,IAAI,EAAE2F,IAAI,CAAC3F,IAAtE;QAA4EE,UAAU,EAAEyF,IAAI,CAACzF;MAA7F,CAAP;IAAkH,CAAzJ,CADF;;IAGA,IAAI+E,UAAU,CAAClC,MAAX,GAAoB,CAAxB,EAA2B;MACzBqD,gBAAgB,GAAGA,gBAAgB,CAAC3C,MAAjB,CAAwBkC,IAAI,IAAI;QACjD,OAAOV,UAAU,CAACoB,KAAX,CAAiB1H,GAAG,IAAI;UAC7B,OAAOgH,IAAI,CAAC3F,IAAL,CAAUsG,QAAV,CAAmB3H,GAAnB,CAAP;QACD,CAFM,CAAP;MAGD,CAJkB,CAAnB;IAKD;;IAED,IAAIwG,YAAY,KAAK,EAArB,EAAyB;MACvBiB,gBAAgB,GAAGA,gBAAgB,CAAC3C,MAAjB,CAAwBkC,IAAI,IAAI;QACjD,OAAOA,IAAI,CAACzF,UAAL,KAAoBiF,YAA3B;MACD,CAFkB,CAAnB;IAGD;;IACDR,aAAa,CAACyB,gBAAD,CAAb;EACD,CAlBQ,EAkBN,CAACnB,UAAD,EAAaE,YAAb,EAA2BX,UAA3B,CAlBM,CAAT;;EAoBA,MAAM+B,YAAY,GAAG,MAAM;IACzBtH,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B4F,WAA3B;IACA,IAAI0B,OAAO,GAAGhC,UAAd;;IACA,IAAIM,WAAW,KAAK,EAApB,EAAwB;MACtB0B,OAAO,GAAGA,OAAO,CAAC/C,MAAR,CAAekC,IAAI,IAAI;QAC/B,IAAIvC,YAAJ,EAAkB;UAChB,OAAQuC,IAAI,CAAC5F,IAAL,CAAUmG,WAAV,GAAwBI,QAAxB,CAAiCxB,WAAW,CAACoB,WAAZ,EAAjC,KAA+DP,IAAI,CAAC/F,IAAL,CAAUsG,WAAV,GAAwBI,QAAxB,CAAiCxB,WAAW,CAACoB,WAAZ,EAAjC,CAAvE;QACD,CAFD,MAEO;UACL,OAAOP,IAAI,CAAC/F,IAAL,CAAUsG,WAAV,GAAwBI,QAAxB,CAAiCxB,WAAW,CAACoB,WAAZ,EAAjC,CAAP;QACD;MACF,CANS,CAAV;IAOD;;IACD,IAAIjB,UAAU,CAAClC,MAAX,GAAoB,CAAxB,EAA2B;MACzByD,OAAO,GAAGA,OAAO,CAAC/C,MAAR,CAAekC,IAAI,IAAI;QAC/B,OAAOV,UAAU,CAACoB,KAAX,CAAiB1H,GAAG,IAAI;UAC7B,OAAOgH,IAAI,CAAC3F,IAAL,CAAUsG,QAAV,CAAmB3H,GAAnB,CAAP;QACD,CAFM,CAAP;MAGD,CAJS,CAAV;IAKD;;IAED,IAAIwG,YAAY,KAAK,EAArB,EAAyB;MACvBqB,OAAO,GAAGA,OAAO,CAAC/C,MAAR,CAAekC,IAAI,IAAI;QAC/B,OAAOA,IAAI,CAACzF,UAAL,KAAoBiF,YAA3B;MACD,CAFS,CAAV;IAGD;;IAED9C,QAAQ,CAAC;MAAEJ,IAAI,EAAE,OAAR;MAAiBgC,OAAO,EAAEuC;IAA1B,CAAD,CAAR;EACD,CA3BD;;EA8BA,oBACE;IAAA,wBACE,QAAC,IAAD;MAAM,SAAS,MAAf;MAAA,uBACE,QAAC,IAAD,CAAM,GAAN;QAAU,SAAS,MAAnB;QAAA,wBACE,QAAC,IAAD,CAAM,MAAN;UAAa,KAAK,EAAE,EAApB;UAAA,uBACE,QAAC,OAAD;YAAA,uBACE,QAAC,IAAD;cAAM,QAAQ,EAAED,YAAhB;cAAA,uBACE,QAAC,IAAD,CAAM,KAAN;gBAAY,MAAM,MAAlB;gBAAA,wBAEE;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAFF,eAGE;kBAAK,KAAK,EAAE;oBAAEE,KAAK,EAAE;kBAAT,CAAZ;kBAAA,uBACE,QAAC,SAAD;oBAEE,MAAM,EAAE/B,UAFV;oBAGE,YAAY,EAAEtB,YAHhB;oBAIE,WAAW,EAAE2B;kBAJf,GACO7D,IAAI,CAACC,SAAL,CAAeuD,UAAf,IAA6BtB,YADpC;oBAAA;oBAAA;oBAAA;kBAAA;gBADF;kBAAA;kBAAA;kBAAA;gBAAA,QAHF,eAWE;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAXF,eAYE;kBAAK,KAAK,EAAE;oBAAE7C,OAAO,EAAE,MAAX;oBAAmBmG,UAAU,EAAE;kBAA/B,CAAZ;kBAAA,uBACE,QAAC,IAAD,CAAM,KAAN;oBAAA,uBACE,QAAC,QAAD;sBAAU,KAAK,EAAC,wBAAhB;sBAAyC,QAAQ,EAAE,CAAC1H,CAAD,EAAS2H,CAAT,KAAoB;wBAAE3B,eAAe,CAAC2B,CAAC,CAACC,OAAH,CAAf;sBAA6B;oBAAtG;sBAAA;sBAAA;sBAAA;oBAAA;kBADF;oBAAA;oBAAA;oBAAA;kBAAA;gBADF;kBAAA;kBAAA;kBAAA;gBAAA,QAZF,eAkBE;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAlBF,eAmBE,QAAC,QAAD;kBACE,WAAW,EAAC,aADd;kBAEE,KAAK,MAFP;kBAGE,QAAQ,MAHV;kBAIE,MAAM,MAJR;kBAKE,SAAS,MALX;kBAME,QAAQ,EAAE,CAAC5H,CAAD,YAA2B;oBAAA,IAAnB;sBAAEX;oBAAF,CAAmB;oBAAE6G,aAAa,CAAC7G,KAAD,CAAb;kBAAuB,CANhE;kBAOE,OAAO,EAAEuG;gBAPX;kBAAA;kBAAA;kBAAA;gBAAA,QAnBF,eA4BE;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QA5BF,eA6BE,QAAC,QAAD;kBACE,WAAW,EAAC,eADd;kBAEE,SAAS,MAFX;kBAGE,SAAS,MAHX;kBAIE,OAAO,EAAE1G,QAJX;kBAKE,QAAQ,EAAE,CAACc,CAAD,YAA2B;oBAAA,IAAnB;sBAAEX;oBAAF,CAAmB;oBAAE+G,eAAe,CAAC/G,KAAD,CAAf;kBAAyB;gBALlE;kBAAA;kBAAA;kBAAA;gBAAA,QA7BF,eAoCE;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QApCF,eAqCE,QAAC,IAAD,CAAM,MAAN;kBAAa,OAAO,EAAC;gBAArB;kBAAA;kBAAA;kBAAA;gBAAA,QArCF;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YADF;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QADF,eA8CE,QAAC,IAAD,CAAM,MAAN;UAAa,KAAK,EAAE,CAApB;UAAA,uBACE,QAAC,OAAD;YAAS,KAAK,EAAE;cAAEkC,OAAO,EAAE,MAAX;cAAmBsG,cAAc,EAAE,QAAnC;cAA6CH,UAAU,EAAE;YAAzD,CAAhB;YAAA,oCAEE,QAAC,OAAD;cAAS,QAAQ,EAAE;gBAAC/F,GAAG,EAAC,EAAL;gBAASf,IAAI,EAAC,EAAd;gBAAkBG,IAAI,EAAC,EAAvB;gBAA0BC,IAAI,EAAC,EAA/B;gBAAkCE,UAAU,EAAC;cAA7C,CAAnB;cAAqE,MAAM,EAAEzB,MAA7E;cAAqF,eAAe,EAAE4G,cAAtG;cAAsH,QAAQ,EAAE;YAAhI;cAAA;cAAA;cAAA;YAAA,QAFF;UAAA;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QA9CF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAwDE,QAAC,KAAD;MAAO,MAAM,MAAb;MAAc,UAAU,MAAxB;MAAyB,QAAQ,MAAjC;MAAA,wBACE,QAAC,KAAD,CAAO,MAAP;QAAA,uBACE,QAAC,KAAD,CAAO,GAAP;UAAA,wBACE,QAAC,KAAD,CAAO,UAAP;YACE,MAAM,EAAEnB,MAAM,KAAK,MAAX,GAAoBG,SAApB,GAAgC,IAD1C;YAEE,OAAO,EAAE,MAAM;cACbhC,QAAQ,CAAC;gBAAEJ,IAAI,EAAE,aAAR;gBAAuBiC,MAAM,EAAE;cAA/B,CAAD,CAAR;YACD,CAJH;YAME,KAAK,EAAE,CANT;YAAA;UAAA,GAKM,MALN;YAAA;YAAA;YAAA;UAAA,QADF,eASE,QAAC,KAAD,CAAO,UAAP;YACE,MAAM,EAAEA,MAAM,KAAK,MAAX,GAAoBG,SAApB,GAAgC,IAD1C;YAEE,OAAO,EAAE,MAAMhC,QAAQ,CAAC;cAAEJ,IAAI,EAAE,aAAR;cAAuBiC,MAAM,EAAE;YAA/B,CAAD,CAFzB;YAIE,KAAK,EAAE,CAJT;YAAA;UAAA,GAGM,MAHN;YAAA;YAAA;YAAA;UAAA,QATF,eAeE,QAAC,KAAD,CAAO,UAAP;YACE,MAAM,EAAEA,MAAM,KAAK,MAAX,GAAoBG,SAApB,GAAgC,IAD1C;YAEE,OAAO,EAAE,MAAMhC,QAAQ,CAAC;cAAEJ,IAAI,EAAE,aAAR;cAAuBiC,MAAM,EAAE;YAA/B,CAAD,CAFzB;YAIE,KAAK,EAAE,CAJT;YAAA;UAAA,GAGM,MAHN;YAAA;YAAA;YAAA;UAAA,QAfF,eAqBE,QAAC,KAAD,CAAO,UAAP;YACE,MAAM,EAAEA,MAAM,KAAK,YAAX,GAA0BG,SAA1B,GAAsC,IADhD;YAEE,OAAO,EAAE,MAAMhC,QAAQ,CAAC;cAAEJ,IAAI,EAAE,aAAR;cAAuBiC,MAAM,EAAE;YAA/B,CAAD,CAFzB;YAIE,KAAK,EAAE,CAJT;YAAA;UAAA,GAGM,YAHN;YAAA;YAAA;YAAA;UAAA,QArBF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAgCE,QAAC,KAAD,CAAO,IAAP;QAAA,UACGxB,IAAI,CAACjC,GAAL,CAAUqG,OAAD,iBACR,QAAC,OAAD;UAA2B,QAAQ,EAAEA,OAArC;UAA8C,MAAM,EAAErI,MAAtD;UAA8D,eAAe,EAAE4G;QAA/E,GAAcyB,OAAO,CAACnG,GAAtB;UAAA;UAAA;UAAA;QAAA,QADD;MADH;QAAA;QAAA;QAAA;MAAA,QAhCF;IAAA;MAAA;MAAA;MAAA;IAAA,QAxDF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkGD,CAtPD;;IAAMiD,S;;MAAAA,S;;AAwPN,MAAMmD,eAAe,GAAG,MAAM;EAC5B,oBACE;IAAK,SAAS,EAAC,iBAAf;IAAA,uBACE,QAAC,OAAD;MAAA,wBACE;QAAK,KAAK,EAAE;UAAEC,SAAS,EAAE;QAAb,CAAZ;QAAA,uBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAIE,QAAC,OAAD;QAAA;QAAA;QAAA;MAAA,QAJF,eAKE,QAAC,SAAD;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAWD,CAZD;;MAAMD,e;;AAcN,SAASE,GAAT,GAAe;EAAA;;EACbnK,SAAS,CAAC,MAAM;IACdoK,QAAQ,CAAC3D,KAAT,GAAiB,iBAAjB;EACD,CAFQ,CAAT;EAIA,oBACE;IACE,KAAK,EAAE;MACL7C,OAAO,EAAE;IADJ,CADT;IAAA,wBAIE,QAAC,MAAD;MAAA,uBACE;QAAA,UAAQ;MAAR;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAJF,eAQE,QAAC,eAAD;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAYD;;IAjBQuG,G;;MAAAA,G;AAmBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}
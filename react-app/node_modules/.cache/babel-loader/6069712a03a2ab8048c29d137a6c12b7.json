{"ast":null,"code":"var _jsxFileName = \"/home/brandon/Desktop/Research/Modern_Task_WAPP/my-app/src/App.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Helmet } from \"react-helmet\";\nimport { Table, Segment } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ElementsTable = () => {\n  _s();\n\n  const [tasks, setTasks] = useState([]); // var rows: Array<JSX.Element> = [];\n  // const [rows, setRows] = useState <Array<JSX.Element>>([]);\n\n  useEffect(() => {\n    // Task are stored as an array of (creation index, name, {tag1, tag2, ...}, isdone)\n    // alert(\"Hello\");\n    setTasks([[1, 'Task 1', ['Task 1.1', 'Task 1.2'], false], [2, 'Task 2', ['Task 2.1', 'Task 2.2'], false], [3, 'Task 3', ['Task 3.1', 'Task 3.2'], false]]);\n    console.log(tasks);\n  });\n  return /*#__PURE__*/_jsxDEV(Table, {\n    celled: true,\n    children: [/*#__PURE__*/_jsxDEV(Table.Header, {\n      children: /*#__PURE__*/_jsxDEV(Table.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n          children: \"Task Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n          children: \"Tags\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Table.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n          children: \"Example Task 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n          children: \" hello\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n          children: \"bye\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), tasks.map(_ref => {\n        let [index, name, tags, isdone] = _ref;\n        return /*#__PURE__*/_jsxDEV(Table.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: \"Helllo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 7\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ElementsTable, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n\n_c = ElementsTable;\n\nconst MainBodySegment = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainBodySegment\",\n    children: /*#__PURE__*/_jsxDEV(Segment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Brandon's \\\"Modern\\\" To-Do App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ElementsTable, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = MainBodySegment;\n\nfunction App() {\n  _s2();\n\n  useEffect(() => {\n    document.title = \"Modern TODO App\";\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '3em'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"style\", {\n        children: \"body { background-color: #eddefa; }\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainBodySegment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ElementsTable\");\n$RefreshReg$(_c2, \"MainBodySegment\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Helmet","Table","Segment","ElementsTable","tasks","setTasks","console","log","map","index","name","tags","isdone","MainBodySegment","textAlign","App","document","title","padding"],"sources":["/home/brandon/Desktop/Research/Modern_Task_WAPP/my-app/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState} from 'react';\nimport { Helmet } from \"react-helmet\";\nimport { Header, Table, Rating, Segment, Button } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css'\nimport './App.css';\n\nconst ElementsTable = () => {\n  const [tasks, setTasks] = useState <Array<[number, string, Array<string>, Boolean]>>([]);\n  // var rows: Array<JSX.Element> = [];\n  // const [rows, setRows] = useState <Array<JSX.Element>>([]);\n  useEffect(() => {\n    // Task are stored as an array of (creation index, name, {tag1, tag2, ...}, isdone)\n    // alert(\"Hello\");\n    setTasks([\n      [1, 'Task 1', ['Task 1.1', 'Task 1.2'], false],\n      [2, 'Task 2', ['Task 2.1', 'Task 2.2'], false],\n      [3, 'Task 3', ['Task 3.1', 'Task 3.2'], false],\n    ]);\n\n    console.log(tasks);\n\n  });\n  return (\n    <Table celled>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell>Task Name</Table.HeaderCell>\n          <Table.HeaderCell>Tags</Table.HeaderCell>\n          <Table.HeaderCell>Completed</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n\n      <Table.Body>\n        <Table.Row>\n          <Table.Cell>Example Task 1</Table.Cell>\n          <Table.Cell> hello</Table.Cell>\n          <Table.Cell>bye</Table.Cell>\n        </Table.Row>\n        {tasks.map(([index, name, tags, isdone]) =>\n      <Table.Row>\n        <Table.Cell>{name}</Table.Cell>\n        <Table.Cell>\n          Helllo\n        </Table.Cell>\n        <Table.Cell>\n          Done\n        </Table.Cell>\n      </Table.Row>\n    )}\n      </Table.Body>\n    </Table>\n  );\n}\n\nconst MainBodySegment = () => {\n  return (\n    <div className=\"mainBodySegment\">\n      <Segment>\n        <div style={{ textAlign: 'center' }}>\n          <h1>Brandon's \"Modern\" To-Do App</h1>\n        </div>\n\n        <ElementsTable />\n      </Segment >\n    </div >\n  );\n}\n\nfunction App() {\n  useEffect(() => {\n    document.title = \"Modern TODO App\";\n\n  });\n\n  return (\n    <div\n      style={{\n        padding: '3em',\n      }} >\n      <Helmet>\n        <style>{\"body { background-color: #eddefa; }\"}</style>\n      </Helmet>\n      <MainBodySegment />\n    </div >\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
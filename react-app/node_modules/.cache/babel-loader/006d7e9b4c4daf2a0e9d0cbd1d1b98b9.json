{"ast":null,"code":"var _jsxFileName = \"/home/brandon/Desktop/Research/Modern_Task_WAPP/my-app/src/App.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport _ from 'lodash';\nimport { Helmet } from \"react-helmet\";\nimport { Label, Table, Segment, Modal, Header, Form, TextArea, Dropdown, Button, Icon, Divider, Checkbox, Search } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\nconst statuses = [{\n  key: \"Not Started\",\n  text: \"Not Started\",\n  value: \"Not Started\"\n}, {\n  key: \"In Progress\",\n  text: \"In Progress\",\n  value: \"In Progress\"\n}, {\n  key: \"Completed\",\n  text: \"Completed\",\n  value: \"Completed\"\n}];\n\nconst TagDropDown = props => {\n  _s();\n\n  let initOptions = [];\n  props.tagSet.forEach(tag => {\n    initOptions.push({\n      key: tag,\n      text: tag,\n      value: tag\n    });\n  });\n  const [options, setOptions] = useState(initOptions);\n\n  const handleAddition = (e, _ref) => {\n    let {\n      value\n    } = _ref;\n    console.log(\"hello\", options);\n    setOptions([{\n      key: value,\n      text: value,\n      value: value\n    }, ...options]);\n  };\n\n  const handleChange = (e, _ref2) => {\n    let {\n      value\n    } = _ref2;\n    props.onChange(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dropdown, {\n    options: options,\n    value: props.currentTags,\n    placeholder: \"Select Tag\",\n    search: true,\n    selection: true,\n    fluid: true,\n    multiple: true,\n    allowAdditions: true,\n    onAddItem: handleAddition,\n    onChange: handleChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TagDropDown, \"mmUoK8PdDFSDE0uMe6E+Uaja3qQ=\");\n\n_c = TagDropDown;\n\nconst TaskRow = props => {\n  _s2();\n\n  const [open, setOpen] = useState(false);\n  const [taskName, setTaskName] = useState(props.taskInfo.name);\n  const [taskDesc, setTaskDesc] = useState(props.taskInfo.desc);\n  const [tags, setTags] = useState(props.taskInfo.tags);\n  const [taskStatus, setTaskStatus] = useState(props.taskInfo.taskStatus);\n\n  const handleTagsChange = tags => {\n    setTags(tags);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: () => setOpen(false),\n    onOpen: () => setOpen(true),\n    open: open,\n    trigger: /*#__PURE__*/_jsxDEV(Table.Row, {\n      children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n        children: props.taskInfo.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n        children: props.taskInfo.desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexWrap: \"wrap\"\n          },\n          children: props.taskInfo.tags.map(tag => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Label, {\n              color: \"blue\",\n              tag: true,\n              children: tag\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n        children: props.taskInfo.taskStatus === 'Not Started' ? /*#__PURE__*/_jsxDEV(Label, {\n          color: \"red\",\n          children: props.taskInfo.taskStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this) : props.taskInfo.taskStatus === 'In Progress' ? /*#__PURE__*/_jsxDEV(Label, {\n          color: \"orange\",\n          children: props.taskInfo.taskStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 19\n        }, this) : /*#__PURE__*/_jsxDEV(Label, {\n          color: \"green\",\n          children: props.taskInfo.taskStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, props.taskInfo.index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      children: \"Edit Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n      children: /*#__PURE__*/_jsxDEV(Modal.Description, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          children: [\"Editing Task: \", props.taskInfo.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Task Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              placeholder: \"Task Name\",\n              defaultValue: taskName,\n              onChange: e => setTaskName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Task Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n              placeholder: \"Task Description\",\n              defaultValue: taskDesc,\n              onChange: e => setTaskDesc(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Tags\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TagDropDown, {\n              tagSet: props.tagSet,\n              currentTags: tags,\n              onChange: handleTagsChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Task Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n              placeholder: \"Select Friend\",\n              fluid: true,\n              selection: true,\n              options: statuses,\n              defaultValue: taskStatus,\n              onChange: (e, _ref3) => {\n                let {\n                  value\n                } = _ref3;\n                setTaskStatus(value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"green\",\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          name: \"checkmark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), \" Save\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(TaskRow, \"aImGXrEMbAjzKT67aviJhO1rIZY=\");\n\n_c2 = TaskRow;\n\nfunction SearchBox(props) {\n  _s3();\n\n  const initialState = {\n    loading: false,\n    results: [],\n    value: ''\n  };\n\n  function SearchBoxReducer(state, action) {\n    switch (action.type) {\n      case 'CLEAN_QUERY':\n        return initialState;\n\n      case 'START_SEARCH':\n        return { ...state,\n          loading: true,\n          value: action.query\n        };\n\n      case 'FINISH_SEARCH':\n        return { ...state,\n          loading: false,\n          results: action.results\n        };\n\n      case 'UPDATE_SELECTION':\n        return { ...state,\n          value: action.selection\n        };\n\n      default:\n        throw new Error();\n    }\n  }\n\n  const [state, dispatch] = React.useReducer(SearchBoxReducer, initialState);\n  const {\n    loading,\n    results,\n    value\n  } = state;\n  const timeoutRef = React.useRef(0);\n  const handleSearchChange = React.useCallback((e, data) => {\n    clearTimeout(timeoutRef.current);\n    dispatch({\n      type: 'START_SEARCH',\n      query: data.value\n    });\n    timeoutRef.current = window.setTimeout(() => {\n      if (data.value.length === 0) {\n        dispatch({\n          type: 'CLEAN_QUERY'\n        });\n        return;\n      }\n\n      const re = new RegExp(_.escapeRegExp(data.value), 'i');\n      const isMatch = !props.searchInDesc ? result => re.test(result.title) : result => re.test(result.title) || re.test(result.description);\n      dispatch({\n        type: 'FINISH_SEARCH',\n        results: _.filter(props.source, isMatch)\n      });\n    }, 300);\n  }, []);\n  React.useEffect(() => {\n    // console.log(\"search box\", props.source);\n    dispatch({\n      type: 'FINISH_SEARCH',\n      results: props.source\n    });\n    return () => {\n      clearTimeout(timeoutRef.current);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Search, {\n    fluid: true,\n    size: \"large\",\n    loading: loading,\n    placeholder: \"Search...\",\n    onResultSelect: (e, data) => dispatch({\n      type: 'UPDATE_SELECTION',\n      selection: data.result.title\n    }),\n    onSearchChange: handleSearchChange,\n    results: results,\n    value: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(SearchBox, \"eyK34sYtN/wGlobeW5QOJcopodM=\");\n\n_c3 = SearchBox;\n\nconst TaskTable = () => {\n  _s4();\n\n  const [tagSet, setTagSet] = useState(new Array()); // Sorting\n\n  function sortReducer(state, action) {\n    switch (action.type) {\n      case 'RESET':\n        return initTable(action.payload);\n\n      case 'CHANGE_SORT':\n        if (state.column === action.column) {\n          return { ...state,\n            data: state.data.slice().reverse(),\n            direction: state.direction === 'ascending' ? 'descending' : 'ascending'\n          };\n        }\n\n        return {\n          column: action.column,\n          data: _.sortBy(state.data, [action.column]),\n          direction: 'ascending'\n        };\n\n      default:\n        throw new Error();\n    }\n  }\n\n  const initTable = newdata => {\n    return {\n      column: null,\n      data: newdata,\n      direction: null\n    };\n  };\n\n  const [state, dispatch] = React.useReducer(sortReducer, [], initTable); // here state = {column, data, dir}\n\n  const {\n    column,\n    data,\n    direction\n  } = state; // Searching\n\n  const [searchData, setSearchData] = useState([]);\n  const [searchTagOptions, setSearchTagOptions] = useState([]);\n  const [searchField, setSearchField] = useState(\"\");\n  const [searchInDesc, setSearchInDesc] = useState(false);\n  const [searchTags, setSearchTags] = useState([]);\n  const [searchStatus, setSearchStatus] = useState(\"\");\n  var initSearchData = [];\n  useEffect(() => {\n    // Task are stored as an array of (creation index, name, description, {tag1, tag2, ...}, taskStatus)\n    let initTasks = [{\n      index: 1,\n      name: 'Learn HTML',\n      desc: \"Create at least something\",\n      tags: ['Task 1.1', 'Task 1.2', \"Brandon\", \"Hello\", \"hello\"],\n      taskStatus: \"Not Started\"\n    }, {\n      index: 2,\n      name: 'Learn CSS',\n      desc: \"Create at least a stylesheet\",\n      tags: ['Task 2.1', 'Task 2.2'],\n      taskStatus: \"In Progress\"\n    }, {\n      index: 3,\n      name: 'Learn JAVASCRIPT',\n      desc: \"Create at least an APP\",\n      tags: ['Task 3.1', 'Task 3.2'],\n      taskStatus: \"Completed\"\n    }, {\n      index: 4,\n      name: 'Learn C++',\n      desc: \"Create at least a programme\",\n      tags: ['Task 3.1', 'Task 3.2'],\n      taskStatus: \"Completed\"\n    }, {\n      index: 5,\n      name: 'Learn Python',\n      desc: \"Create at least an AI\",\n      tags: ['Task 3.1', 'Task 3.2'],\n      taskStatus: \"Completed\"\n    }, {\n      index: 6,\n      name: 'Learn Haskell',\n      desc: \"Create at least a paper\",\n      tags: ['Task 3.1', 'Task 3.2'],\n      taskStatus: \"Completed\"\n    }, {\n      index: 7,\n      name: 'Learn C#',\n      desc: \"Create at least an game\",\n      tags: ['Task 3.1', 'Task 3.2'],\n      taskStatus: \"Completed\"\n    }];\n    dispatch({\n      type: 'RESET',\n      payload: initTasks\n    });\n    initSearchData = initTasks.map(task => {\n      return {\n        index: task.index,\n        title: task.name,\n        description: task.desc,\n        tags: task.tags,\n        taskStatus: task.taskStatus\n      };\n    });\n    setSearchData(initSearchData);\n    let initTagSet = new Array();\n    initTasks.forEach(task => {\n      task.tags.forEach(tag => {\n        initTagSet.push(tag);\n      });\n    });\n    initTagSet = Array.from(new Set(initTagSet));\n    initTagSet.sort((a, b) => {\n      return a.toLowerCase() > b.toLowerCase() ? 1 : -1;\n    });\n    var initsearchTagOptions = new Array();\n    initTagSet.forEach(tag => {\n      initsearchTagOptions.push({\n        key: tag,\n        text: tag,\n        value: tag\n      });\n    });\n    setSearchTagOptions(initsearchTagOptions);\n    setTagSet(initTagSet);\n  }, []);\n\n  const updateSearchOptions = () => {\n    let newSearchOptions = data.map(task => {\n      return {\n        index: task.index,\n        title: task.name,\n        description: task.desc,\n        tags: task.tags,\n        taskStatus: task.taskStatus\n      };\n    });\n    newSearchOptions = newSearchOptions.filter(task => {\n      return searchTags.every(tag => {\n        return task.tags.includes(tag);\n      });\n    });\n\n    if (searchStatus !== \"\") {\n      newSearchOptions = newSearchOptions.filter(task => {\n        return task.taskStatus === searchStatus;\n      });\n    }\n\n    console.log(\"newSearchOptions\", newSearchOptions);\n    setSearchData(newSearchOptions);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Segment, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          inline: true,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"40em\"\n            },\n            children: /*#__PURE__*/_jsxDEV(SearchBox, {\n              source: searchData,\n              searchInDesc: searchInDesc\n            }, JSON.stringify(searchData) + searchInDesc, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"\\xA0\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              alignItems: \"center\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Form.Field, {\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                label: \"Search in Descriptions\",\n                onChange: (e, d) => {\n                  setSearchInDesc(d.checked);\n                  updateSearchOptions();\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Filters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            placeholder: \"Select Tags\",\n            fluid: true,\n            multiple: true,\n            search: true,\n            selection: true,\n            onChange: (e, _ref4) => {\n              let {\n                value\n              } = _ref4;\n              setSearchTags(value);\n              updateSearchOptions();\n            },\n            options: searchTagOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"\\xA0\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            placeholder: \"Select Status\",\n            clearable: true,\n            selection: true,\n            options: statuses,\n            onChange: (e, _ref5) => {\n              let {\n                value\n              } = _ref5;\n              setSearchStatus(value);\n              updateSearchOptions();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"\\xA0\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Button, {\n            content: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      celled: true,\n      selectable: true,\n      sortable: true,\n      fixed: true,\n      children: [/*#__PURE__*/_jsxDEV(Table.Header, {\n        children: /*#__PURE__*/_jsxDEV(Table.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            sorted: column === 'name' ? direction : null,\n            onClick: () => {\n              dispatch({\n                type: 'CHANGE_SORT',\n                column: 'name'\n              });\n            },\n            children: \"Task Name\"\n          }, \"name\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            sorted: column === 'desc' ? direction : null,\n            onClick: () => dispatch({\n              type: 'CHANGE_SORT',\n              column: 'desc'\n            }),\n            children: \"Task Description\"\n          }, \"desc\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            sorted: column === 'tags' ? direction : null,\n            onClick: () => dispatch({\n              type: 'CHANGE_SORT',\n              column: 'tags'\n            }),\n            children: \"Tags\"\n          }, \"tags\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            sorted: column === 'taskStatus' ? direction : null,\n            onClick: () => dispatch({\n              type: 'CHANGE_SORT',\n              column: 'taskStatus'\n            }),\n            children: \"Completed\"\n          }, \"taskStatus\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n        children: data.map(rowData => /*#__PURE__*/_jsxDEV(TaskRow, {\n          taskInfo: rowData,\n          tagSet: tagSet\n        }, rowData.index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 293,\n    columnNumber: 5\n  }, this);\n};\n\n_s4(TaskTable, \"pqWjdw2+J4h3zu+Sa4zLVSKgazs=\");\n\n_c4 = TaskTable;\n\nconst MainBodySegment = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainBodySegment\",\n    children: /*#__PURE__*/_jsxDEV(Segment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Brandon's \\\"Modern\\\" To-Do App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskTable, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 375,\n    columnNumber: 5\n  }, this);\n};\n\n_c5 = MainBodySegment;\n\nfunction App() {\n  _s5();\n\n  useEffect(() => {\n    document.title = \"Modern TODO App\";\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '3em'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"style\", {\n        children: \"body { background-color: #eddefa; }\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainBodySegment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 393,\n    columnNumber: 5\n  }, this);\n}\n\n_s5(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c6 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"TagDropDown\");\n$RefreshReg$(_c2, \"TaskRow\");\n$RefreshReg$(_c3, \"SearchBox\");\n$RefreshReg$(_c4, \"TaskTable\");\n$RefreshReg$(_c5, \"MainBodySegment\");\n$RefreshReg$(_c6, \"App\");","map":{"version":3,"names":["React","useEffect","useState","_","Helmet","Label","Table","Segment","Modal","Header","Form","TextArea","Dropdown","Button","Icon","Divider","Checkbox","Search","statuses","key","text","value","TagDropDown","props","initOptions","tagSet","forEach","tag","push","options","setOptions","handleAddition","e","console","log","handleChange","onChange","currentTags","TaskRow","open","setOpen","taskName","setTaskName","taskInfo","name","taskDesc","setTaskDesc","desc","tags","setTags","taskStatus","setTaskStatus","handleTagsChange","display","flexWrap","map","padding","index","target","SearchBox","initialState","loading","results","SearchBoxReducer","state","action","type","query","selection","Error","dispatch","useReducer","timeoutRef","useRef","handleSearchChange","useCallback","data","clearTimeout","current","window","setTimeout","length","re","RegExp","escapeRegExp","isMatch","searchInDesc","result","test","title","description","filter","source","TaskTable","setTagSet","Array","sortReducer","initTable","payload","column","slice","reverse","direction","sortBy","newdata","searchData","setSearchData","searchTagOptions","setSearchTagOptions","searchField","setSearchField","setSearchInDesc","searchTags","setSearchTags","searchStatus","setSearchStatus","initSearchData","initTasks","task","initTagSet","from","Set","sort","a","b","toLowerCase","initsearchTagOptions","updateSearchOptions","newSearchOptions","every","includes","width","JSON","stringify","alignItems","d","checked","rowData","MainBodySegment","textAlign","App","document"],"sources":["/home/brandon/Desktop/Research/Modern_Task_WAPP/my-app/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport _ from 'lodash';\nimport { Helmet } from \"react-helmet\";\nimport { Label, Table, Segment, Modal, Header, Form, TextArea, Dropdown, Button, Icon, Divider, Checkbox, Search } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css'\nimport './App.css';\n\ninterface searchBoxRep { index: number, title: string, description: string, tags: Array<string>, taskStatus: string };\ninterface taskRowRep { index: number, name: string, desc: string, tags: Array<string>, taskStatus: string }\nconst statuses = [{ key: \"Not Started\", text: \"Not Started\", value: \"Not Started\" },\n{ key: \"In Progress\", text: \"In Progress\", value: \"In Progress\" },\n{ key: \"Completed\", text: \"Completed\", value: \"Completed\" }];\n\nconst TagDropDown = (props: { tagSet: Array<string>, onChange: any, currentTags: Array<string> }) => {\n  let initOptions: Array<{ key: string, text: string, value: string }> = [];\n  props.tagSet.forEach(tag => {\n    initOptions.push({ key: tag, text: tag, value: tag });\n  });\n\n  const [options, setOptions] = useState(initOptions);\n\n  const handleAddition = (e: {}, { value }: any) => {\n    console.log(\"hello\", options);\n    setOptions([{ key: value, text: value, value: value }, ...options]);\n  }\n  const handleChange = (e: {}, { value }: any) => { props.onChange(value); }\n  return (\n    <Dropdown\n      options={options}\n      value={props.currentTags}\n      placeholder='Select Tag'\n      search\n      selection\n      fluid\n      multiple\n      allowAdditions\n      onAddItem={handleAddition}\n      onChange={handleChange}\n    />\n  );\n}\n\nconst TaskRow = (props: { taskInfo: taskRowRep, tagSet: Array<string> }) => {\n  const [open, setOpen] = useState<boolean>(false);\n  const [taskName, setTaskName] = useState<string>(props.taskInfo.name);\n  const [taskDesc, setTaskDesc] = useState<string>(props.taskInfo.desc);\n  const [tags, setTags] = useState<Array<string>>(props.taskInfo.tags);\n  const [taskStatus, setTaskStatus] = useState<string>(props.taskInfo.taskStatus);\n  const handleTagsChange = (tags: Array<string>) => { setTags(tags); }\n  return (\n    <Modal\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      trigger={\n        <Table.Row key={props.taskInfo.index}>\n          <Table.Cell>{props.taskInfo.name}</Table.Cell>\n          <Table.Cell>{props.taskInfo.desc}</Table.Cell>\n          <Table.Cell>\n            <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n              {props.taskInfo.tags.map((tag) =>\n                <div style={{ padding: 2 }}>\n                  <Label color=\"blue\" tag>{tag}</Label>\n                </div>\n              )}\n            </div>\n          </Table.Cell>\n          <Table.Cell>\n            {\n              (props.taskInfo.taskStatus === 'Not Started') ?\n                <Label color=\"red\">{props.taskInfo.taskStatus}</Label>\n                : (props.taskInfo.taskStatus === 'In Progress') ?\n                  <Label color=\"orange\">{props.taskInfo.taskStatus}</Label>\n                  :\n                  <Label color=\"green\">{props.taskInfo.taskStatus}</Label>\n            }\n          </Table.Cell>\n        </Table.Row>\n      }\n    >\n      <Modal.Header>Edit Task</Modal.Header>\n      <Modal.Content>\n        <Modal.Description>\n          <Header>Editing Task: {props.taskInfo.name}</Header>\n          <Form>\n            <Form.Field>\n              <label>Task Name</label>\n              <input placeholder=\"Task Name\" defaultValue={taskName} onChange={(e: any) => setTaskName(e.target.value)} />\n            </Form.Field>\n            <Form.Field>\n              <label>Task Description</label>\n              <TextArea placeholder='Task Description' defaultValue={taskDesc} onChange={(e: any) => setTaskDesc(e.target.value)} />\n            </Form.Field>\n            <Form.Field>\n              <label>Tags</label>\n              <TagDropDown tagSet={props.tagSet} currentTags={tags} onChange={handleTagsChange} />\n            </Form.Field>\n            <Form.Field>\n              <label>Task Status</label>\n              <Dropdown\n                placeholder='Select Friend'\n                fluid\n                selection\n                options={statuses}\n                defaultValue={taskStatus}\n                onChange={(e: {}, { value }: any) => { setTaskStatus(value) }}\n              />\n            </Form.Field>\n          </Form>\n\n        </Modal.Description>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button color='green'>\n          <Icon name='checkmark' /> Save\n        </Button>\n\n      </Modal.Actions>\n    </Modal>);\n}\n\n\nfunction SearchBox(props: { source: Array<searchBoxRep>, searchInDesc: boolean }) {\n  const initialState = {\n    loading: false,\n    results: [],\n    value: '',\n  }\n  function SearchBoxReducer(state: any, action: any) {\n    switch (action.type) {\n      case 'CLEAN_QUERY':\n        return initialState\n      case 'START_SEARCH':\n        return { ...state, loading: true, value: action.query }\n      case 'FINISH_SEARCH':\n        return { ...state, loading: false, results: action.results }\n      case 'UPDATE_SELECTION':\n        return { ...state, value: action.selection }\n  \n      default:\n        throw new Error()\n    }\n  }\n  const [state, dispatch] = React.useReducer(SearchBoxReducer, initialState)\n  const { loading, results, value } = state\n\n  const timeoutRef = React.useRef(0)\n  const handleSearchChange = React.useCallback((e: any, data: any) => {\n    clearTimeout(timeoutRef.current)\n    dispatch({ type: 'START_SEARCH', query: data.value })\n\n    timeoutRef.current = window.setTimeout(() => {\n      if (data.value.length === 0) {\n        dispatch({ type: 'CLEAN_QUERY' })\n        return\n      }\n\n      const re = new RegExp(_.escapeRegExp(data.value), 'i');\n      const isMatch = !props.searchInDesc ? (result: any) => re.test(result.title) : (result: any) => re.test(result.title) || re.test(result.description);\n      dispatch({\n        type: 'FINISH_SEARCH',\n        results: _.filter(props.source, isMatch),\n      })\n    }, 300)\n  }, [])\n  React.useEffect(() => {\n    // console.log(\"search box\", props.source);\n    dispatch({ type: 'FINISH_SEARCH', results: props.source })\n    return () => {\n      clearTimeout(timeoutRef.current)\n    }\n  }, [])\n\n\n  return (\n    <Search\n      fluid\n      size='large'\n      loading={loading}\n      placeholder='Search...'\n      onResultSelect={(e, data) =>\n        dispatch({ type: 'UPDATE_SELECTION', selection: data.result.title })\n      }\n      onSearchChange={handleSearchChange}\n      results={results}\n      value={value}\n    />\n\n  )\n}\n\n\n\nconst TaskTable = () => {\n  const [tagSet, setTagSet] = useState<Array<string>>(new Array<string>());\n\n  // Sorting\n  function sortReducer(state: any, action: any) {\n    switch (action.type) {\n      case 'RESET':\n        return initTable(action.payload);\n      case 'CHANGE_SORT':\n        if (state.column === action.column) {\n          return {\n            ...state,\n            data: state.data.slice().reverse(),\n            direction:\n              state.direction === 'ascending' ? 'descending' : 'ascending',\n          }\n        }\n\n        return {\n          column: action.column,\n          data: _.sortBy(state.data, [action.column]),\n          direction: 'ascending',\n        }\n      default:\n        throw new Error()\n    }\n  }\n  const initTable = (newdata: Array<taskRowRep>) => {\n    return { column: null, data: newdata, direction: null };\n  }\n  const [state, dispatch] = React.useReducer(sortReducer, [], initTable); // here state = {column, data, dir}\n  const { column, data, direction } = state;\n\n  // Searching\n  const [searchData, setSearchData] = useState<Array<searchBoxRep>>([]);\n  const [searchTagOptions, setSearchTagOptions] = useState<Array<{ key: string, text: string, value: string }>>([]);\n  const [searchField, setSearchField] = useState<string>(\"\");\n  const [searchInDesc, setSearchInDesc] = useState<boolean>(false);\n  const [searchTags, setSearchTags] = useState<Array<string>>([]);\n  const [searchStatus, setSearchStatus] = useState<string>(\"\");\n\n  var initSearchData: Array<searchBoxRep> = [];\n  useEffect(() => {\n    // Task are stored as an array of (creation index, name, description, {tag1, tag2, ...}, taskStatus)\n    let initTasks: Array<taskRowRep> = [\n      { index: 1, name: 'Learn HTML', desc: \"Create at least something\", tags: ['Task 1.1', 'Task 1.2', \"Brandon\", \"Hello\", \"hello\"], taskStatus: \"Not Started\" },\n      { index: 2, name: 'Learn CSS', desc: \"Create at least a stylesheet\", tags: ['Task 2.1', 'Task 2.2'], taskStatus: \"In Progress\" },\n      { index: 3, name: 'Learn JAVASCRIPT', desc: \"Create at least an APP\", tags: ['Task 3.1', 'Task 3.2'], taskStatus: \"Completed\" },\n      { index: 4, name: 'Learn C++', desc: \"Create at least a programme\", tags: ['Task 3.1', 'Task 3.2'], taskStatus: \"Completed\" },\n      { index: 5, name: 'Learn Python', desc: \"Create at least an AI\", tags: ['Task 3.1', 'Task 3.2'], taskStatus: \"Completed\" },\n      { index: 6, name: 'Learn Haskell', desc: \"Create at least a paper\", tags: ['Task 3.1', 'Task 3.2'], taskStatus: \"Completed\" },\n      { index: 7, name: 'Learn C#', desc: \"Create at least an game\", tags: ['Task 3.1', 'Task 3.2'], taskStatus: \"Completed\" },\n    ];\n    dispatch({ type: 'RESET', payload: initTasks });\n    initSearchData =\n      initTasks.map((task) => { return { index: task.index, title: task.name, description: task.desc, tags: task.tags, taskStatus: task.taskStatus } });\n    setSearchData(initSearchData);\n\n    let initTagSet = new Array<string>();\n\n    initTasks.forEach(task => {\n      task.tags.forEach(tag => {\n        initTagSet.push(tag);\n\n      });\n    });\n    initTagSet = Array.from(new Set(initTagSet));\n    initTagSet.sort((a, b) => {\n      return (a.toLowerCase() > b.toLowerCase()) ? 1 : -1;\n    });\n\n    var initsearchTagOptions = new Array<{ key: string, text: string, value: string }>();\n    initTagSet.forEach(tag => {\n      initsearchTagOptions.push({ key: tag, text: tag, value: tag });\n    });\n\n    setSearchTagOptions(initsearchTagOptions);\n    setTagSet(initTagSet);\n  }, []);\n\n  const updateSearchOptions = () => {\n    let newSearchOptions: Array<searchBoxRep> =\n      data.map((task: taskRowRep) => { return { index: task.index, title: task.name, description: task.desc, tags: task.tags, taskStatus: task.taskStatus } });\n\n    newSearchOptions = newSearchOptions.filter(task => {\n      return searchTags.every(tag => {\n        return task.tags.includes(tag);\n      });\n    });\n\n    if (searchStatus !== \"\") {\n      newSearchOptions = newSearchOptions.filter(task => {\n        return task.taskStatus === searchStatus;\n      });\n    }\n    console.log(\"newSearchOptions\", newSearchOptions);\n    setSearchData(newSearchOptions);\n  }\n  return (\n    <div>\n      <Segment>\n\n        <Form>\n          <Form.Group inline>\n\n            <label>Search</label>\n            <div style={{ width: \"40em\" }}>\n              <SearchBox key={JSON.stringify(searchData) + searchInDesc} source={searchData} searchInDesc={searchInDesc} />\n            </div>\n\n            <div>&nbsp;&nbsp;</div>\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n              <Form.Field  >\n                <Checkbox label='Search in Descriptions' onChange={(e: any, d: any) => { setSearchInDesc(d.checked); updateSearchOptions(); }} />\n              </Form.Field>\n            </div>\n\n            <label>Filters</label>\n            <Dropdown\n              placeholder='Select Tags'\n              fluid\n              multiple\n              search\n              selection\n              onChange={(e: {}, { value }: any) => { setSearchTags(value); updateSearchOptions(); }}\n              options={searchTagOptions}\n            />\n            <div>&nbsp;&nbsp;</div>\n            <Dropdown\n              placeholder='Select Status'\n              clearable\n              selection\n              options={statuses}\n              onChange={(e: {}, { value }: any) => { setSearchStatus(value); updateSearchOptions(); }}\n            />\n            <div>&nbsp;&nbsp;</div>\n            <Form.Button content='Submit' />\n          </Form.Group>\n        </Form>\n      </Segment>\n      <Table celled selectable sortable fixed>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell\n              sorted={column === 'name' ? direction : null}\n              onClick={() => {\n                dispatch({ type: 'CHANGE_SORT', column: 'name' });\n              }}\n              key=\"name\"\n            >Task Name</Table.HeaderCell>\n            <Table.HeaderCell\n              sorted={column === 'desc' ? direction : null}\n              onClick={() => dispatch({ type: 'CHANGE_SORT', column: 'desc' })}\n              key=\"desc\"\n            >Task Description</Table.HeaderCell>\n            <Table.HeaderCell\n              sorted={column === 'tags' ? direction : null}\n              onClick={() => dispatch({ type: 'CHANGE_SORT', column: 'tags' })}\n              key=\"tags\"\n            >Tags</Table.HeaderCell>\n            <Table.HeaderCell\n              sorted={column === 'taskStatus' ? direction : null}\n              onClick={() => dispatch({ type: 'CHANGE_SORT', column: 'taskStatus' })}\n              key=\"taskStatus\"\n            >Completed</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {data.map((rowData: taskRowRep) =>\n            <TaskRow key={rowData.index} taskInfo={rowData} tagSet={tagSet}></TaskRow>\n          )}\n        </Table.Body>\n      </Table>\n    </div>\n\n  );\n}\n\nconst MainBodySegment = () => {\n  return (\n    <div className=\"mainBodySegment\">\n      <Segment>\n        <div style={{ textAlign: 'center' }}>\n          <h1>Brandon's \"Modern\" To-Do App</h1>\n        </div>\n        <Divider></Divider>\n        <TaskTable />\n      </Segment >\n    </div >\n  );\n}\n\nfunction App() {\n  useEffect(() => {\n    document.title = \"Modern TODO App\";\n  });\n\n  return (\n    <div\n      style={{\n        padding: '3em',\n      }} >\n      <Helmet>\n        <style>{\"body { background-color: #eddefa; }\"}</style>\n      </Helmet>\n\n      <MainBodySegment />\n    </div >\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
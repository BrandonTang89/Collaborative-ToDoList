{"ast":null,"code":"var _jsxFileName = \"/home/brandon/Desktop/Research/Modern_Task_WAPP/my-app/src/App.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport _ from 'lodash';\nimport { Helmet } from \"react-helmet\";\nimport { Label, Table, Segment, Modal, Header, Form, TextArea, Dropdown, Button, Icon, Divider, Checkbox } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst statuses = [{\n  key: \"Not Started\",\n  text: \"Not Started\",\n  value: \"Not Started\"\n}, {\n  key: \"In Progress\",\n  text: \"In Progress\",\n  value: \"In Progress\"\n}, {\n  key: \"Completed\",\n  text: \"Completed\",\n  value: \"Completed\"\n}];\n\nconst TagDropDown = props => {\n  _s();\n\n  let initOptions = [];\n  props.tagSet.forEach(tag => {\n    initOptions.push({\n      key: tag,\n      text: tag,\n      value: tag\n    });\n  });\n  const [options, setOptions] = useState(initOptions);\n\n  const handleAddition = (e, _ref) => {\n    let {\n      value\n    } = _ref;\n    console.log(\"hello\", options);\n    setOptions([{\n      key: value,\n      text: value,\n      value: value\n    }, ...options]);\n  };\n\n  const handleChange = (e, _ref2) => {\n    let {\n      value\n    } = _ref2;\n    props.onChange(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dropdown, {\n    options: options,\n    value: props.currentTags,\n    placeholder: \"Select Tag\",\n    search: true,\n    selection: true,\n    fluid: true,\n    multiple: true,\n    allowAdditions: true,\n    onAddItem: handleAddition,\n    onChange: handleChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TagDropDown, \"mmUoK8PdDFSDE0uMe6E+Uaja3qQ=\");\n\n_c = TagDropDown;\n\nconst TaskRow = props => {\n  _s2();\n\n  const [open, setOpen] = useState(false);\n  const [taskName, setTaskName] = useState(props.taskInfo.name);\n  const [taskDesc, setTaskDesc] = useState(props.taskInfo.desc);\n  const [tags, setTags] = useState(props.taskInfo.tags);\n  const [taskStatus, setTaskStatus] = useState(props.taskInfo.taskStatus);\n\n  const handleTagsChange = tags => {\n    setTags(tags);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: () => setOpen(false),\n    onOpen: () => setOpen(true),\n    open: open,\n    trigger: /*#__PURE__*/_jsxDEV(Table.Row, {\n      children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n        children: props.taskInfo.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n        children: props.taskInfo.desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexWrap: \"wrap\"\n          },\n          children: props.taskInfo.tags.map(tag => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Label, {\n              color: \"blue\",\n              tag: true,\n              children: tag\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n        children: props.taskInfo.taskStatus === 'Not Started' ? /*#__PURE__*/_jsxDEV(Label, {\n          color: \"red\",\n          children: props.taskInfo.taskStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this) : props.taskInfo.taskStatus === 'In Progress' ? /*#__PURE__*/_jsxDEV(Label, {\n          color: \"orange\",\n          children: props.taskInfo.taskStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 19\n        }, this) : /*#__PURE__*/_jsxDEV(Label, {\n          color: \"green\",\n          children: props.taskInfo.taskStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, props.taskInfo.index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      children: \"Edit Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n      children: /*#__PURE__*/_jsxDEV(Modal.Description, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          children: [\"Editing Task: \", props.taskInfo.index]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Task Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              placeholder: \"Task Name\",\n              defaultValue: taskName,\n              onChange: e => setTaskName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Task Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n              placeholder: \"Task Description\",\n              defaultValue: taskDesc,\n              onChange: e => setTaskDesc(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Tags\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TagDropDown, {\n              tagSet: props.tagSet,\n              currentTags: tags,\n              onChange: handleTagsChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Task Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n              placeholder: \"Select Friend\",\n              fluid: true,\n              selection: true,\n              options: statuses,\n              defaultValue: taskStatus,\n              onChange: (e, _ref3) => {\n                let {\n                  value\n                } = _ref3;\n                setTaskStatus(value);\n                console.log(\"change to\", value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"green\",\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          name: \"checkmark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), \" Save\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(TaskRow, \"aImGXrEMbAjzKT67aviJhO1rIZY=\");\n\n_c2 = TaskRow;\n\nfunction sortReducer(state, action) {\n  switch (action.type) {\n    case 'RESET':\n      return initTable(action.payload);\n\n    case 'CHANGE_SORT':\n      if (state.column === action.column) {\n        return { ...state,\n          data: state.data.slice().reverse(),\n          direction: state.direction === 'ascending' ? 'descending' : 'ascending'\n        };\n      }\n\n      return {\n        column: action.column,\n        data: _.sortBy(state.data, [action.column]),\n        direction: 'ascending'\n      };\n\n    default:\n      throw new Error();\n  }\n}\n\nconst initTable = newdata => {\n  return {\n    column: null,\n    data: newdata,\n    direction: null\n  };\n};\n\nconst TaskTable = () => {\n  _s3();\n\n  const [tagSet, setTagSet] = useState(new Array()); // Sorting\n\n  const [state, dispatch] = React.useReducer(sortReducer, [], initTable); // here state = {column, data, dir}\n\n  const {\n    column,\n    data,\n    direction\n  } = state;\n  var initTagSet = new Array();\n  var searchTagOptions = new Array({\n    key: \"fake\",\n    text: \"f\",\n    value: \"f\"\n  });\n  useEffect(() => {\n    // Task are stored as an array of (creation index, name, description, {tag1, tag2, ...}, taskStatus)\n    let initTasks = [{\n      index: 1,\n      name: 'Learn HTML',\n      desc: \"Create at least something\",\n      tags: ['Task 1.1', 'Task 1.2', \"Brandon\", \"Hello\", \"hello\"],\n      taskStatus: \"Not Started\"\n    }, {\n      index: 2,\n      name: 'Learn CSS',\n      desc: \"Create at least a stylesheet\",\n      tags: ['Task 2.1', 'Task 2.2'],\n      taskStatus: \"In Progress\"\n    }, {\n      index: 3,\n      name: 'Learn JAVASCRIPT',\n      desc: \"Create at least an APP\",\n      tags: ['Task 3.1', 'Task 3.2'],\n      taskStatus: \"Completed\"\n    }];\n    dispatch({\n      type: 'RESET',\n      payload: initTasks\n    });\n    initTagSet = new Array();\n    searchTagOptions = new Array();\n    initTasks.forEach(task => {\n      task.tags.forEach(tag => {\n        initTagSet.push(tag);\n        searchTagOptions.push({\n          key: tag,\n          text: tag,\n          value: tag\n        });\n      });\n    }); // remove duplicates\n\n    initTagSet = Array.from(new Set(initTagSet));\n    searchTagOptions = Array.from(new Set(searchTagOptions));\n    console.log(\"search tag options\", searchTagOptions);\n    setTagSet(initTagSet);\n  }, []);\n  /*\n  useEffect(() => {\n    console.log(tagSet)\n  }, [tagSet]);\n  useEffect(() => {\n    console.log(data)\n  }, [data]);*/\n\n  const [searchTags, setSearchTags] = useState(new Array());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        let initTasks = [{\n          index: 1,\n          name: 'Learn HTML',\n          desc: \"Create at least something\",\n          tags: ['Task 1.1', 'Task 1.2', \"Brandon\", \"Hello\", \"hello\"],\n          taskStatus: \"Not Started\"\n        }, {\n          index: 2,\n          name: 'Learn CSS',\n          desc: \"Create at least a stylesheet\",\n          tags: ['Task 2.1', 'Task 2.2'],\n          taskStatus: \"In Progress\"\n        }, {\n          index: 3,\n          name: 'Learn JAVASCRIPT',\n          desc: \"Create at least an APP\",\n          tags: ['Task 3.1', 'Task 3.2'],\n          taskStatus: \"Completed\"\n        }];\n        dispatch({\n          type: 'RESET',\n          payload: initTasks\n        });\n        initTagSet = new Array();\n        searchTagOptions = new Array();\n        initTasks.forEach(task => {\n          task.tags.forEach(tag => {\n            initTagSet.push(tag);\n            searchTagOptions.push({\n              key: tag,\n              text: tag,\n              value: tag\n            });\n          });\n        }); // remove duplicates\n\n        initTagSet = Array.from(new Set(initTagSet));\n        searchTagOptions = Array.from(new Set(searchTagOptions));\n        console.log(\"search tag options\", searchTagOptions);\n      },\n      children: \"Click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Segment, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          inline: true,\n          children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n            label: \"Search\",\n            placeholder: \"Search\",\n            width: 6\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              alignItems: \"center\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Form.Field, {\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                label: \"Search in Descriptions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            placeholder: \"Select Tags\",\n            fluid: true,\n            multiple: true,\n            search: true,\n            selection: true,\n            options: searchTagOptions\n          }, searchTagOptions.length, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      celled: true,\n      selectable: true,\n      sortable: true,\n      fixed: true,\n      children: [/*#__PURE__*/_jsxDEV(Table.Header, {\n        children: /*#__PURE__*/_jsxDEV(Table.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            sorted: column === 'name' ? direction : null,\n            onClick: () => {\n              dispatch({\n                type: 'CHANGE_SORT',\n                column: 'name'\n              });\n            },\n            children: \"Task Name\"\n          }, \"name\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            sorted: column === 'desc' ? direction : null,\n            onClick: () => dispatch({\n              type: 'CHANGE_SORT',\n              column: 'desc'\n            }),\n            children: \"Task Description\"\n          }, \"desc\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            sorted: column === 'tags' ? direction : null,\n            onClick: () => dispatch({\n              type: 'CHANGE_SORT',\n              column: 'tags'\n            }),\n            children: \"Tags\"\n          }, \"tags\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            sorted: column === 'taskStatus' ? direction : null,\n            onClick: () => dispatch({\n              type: 'CHANGE_SORT',\n              column: 'taskStatus'\n            }),\n            children: \"Completed\"\n          }, \"taskStatus\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n        children: data.map(rowData => /*#__PURE__*/_jsxDEV(TaskRow, {\n          taskInfo: rowData,\n          tagSet: tagSet\n        }, rowData.index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(TaskTable, \"KvndU+j9kqsA4SzuhigXWEHurJA=\");\n\n_c3 = TaskTable;\n\nconst MainBodySegment = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainBodySegment\",\n    children: /*#__PURE__*/_jsxDEV(Segment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Brandon's \\\"Modern\\\" To-Do App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskTable, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 279,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = MainBodySegment;\n\nfunction App() {\n  _s4();\n\n  useEffect(() => {\n    document.title = \"Modern TODO App\";\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '3em'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"style\", {\n        children: \"body { background-color: #eddefa; }\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainBodySegment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 297,\n    columnNumber: 5\n  }, this);\n}\n\n_s4(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c5 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"TagDropDown\");\n$RefreshReg$(_c2, \"TaskRow\");\n$RefreshReg$(_c3, \"TaskTable\");\n$RefreshReg$(_c4, \"MainBodySegment\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["React","useEffect","useState","_","Helmet","Label","Table","Segment","Modal","Header","Form","TextArea","Dropdown","Button","Icon","Divider","Checkbox","statuses","key","text","value","TagDropDown","props","initOptions","tagSet","forEach","tag","push","options","setOptions","handleAddition","e","console","log","handleChange","onChange","currentTags","TaskRow","open","setOpen","taskName","setTaskName","taskInfo","name","taskDesc","setTaskDesc","desc","tags","setTags","taskStatus","setTaskStatus","handleTagsChange","display","flexWrap","map","padding","index","target","sortReducer","state","action","type","initTable","payload","column","data","slice","reverse","direction","sortBy","Error","newdata","TaskTable","setTagSet","Array","dispatch","useReducer","initTagSet","searchTagOptions","initTasks","task","from","Set","searchTags","setSearchTags","alignItems","length","rowData","MainBodySegment","textAlign","App","document","title"],"sources":["/home/brandon/Desktop/Research/Modern_Task_WAPP/my-app/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport _ from 'lodash';\nimport { Helmet } from \"react-helmet\";\nimport { Label, Table, Segment, Modal, Header, Form, TextArea, Dropdown, Button, Icon, Divider, Checkbox } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css'\nimport './App.css';\n\nconst statuses = [{ key: \"Not Started\", text: \"Not Started\", value: \"Not Started\" },\n{ key: \"In Progress\", text: \"In Progress\", value: \"In Progress\" },\n{ key: \"Completed\", text: \"Completed\", value: \"Completed\" }];\n\nconst TagDropDown = (props: { tagSet: Array<string>, onChange: any, currentTags: Array<string> }) => {\n  let initOptions: Array<{ key: string, text: string, value: string }> = [];\n  props.tagSet.forEach(tag => {\n    initOptions.push({ key: tag, text: tag, value: tag });\n  });\n\n  const [options, setOptions] = useState(initOptions);\n\n  const handleAddition = (e: {}, { value }: any) => {\n    console.log(\"hello\", options);\n    setOptions([{ key: value, text: value, value: value }, ...options]);\n  }\n  const handleChange = (e: {}, { value }: any) => { props.onChange(value); }\n  return (\n    <Dropdown\n      options={options}\n      value={props.currentTags}\n      placeholder='Select Tag'\n      search\n      selection\n      fluid\n      multiple\n      allowAdditions\n      onAddItem={handleAddition}\n      onChange={handleChange}\n    />\n  );\n}\n\nconst TaskRow = (props: { taskInfo: { index: number, name: string, desc: string, tags: Array<string>, taskStatus: string }, tagSet: Array<string> }) => {\n  const [open, setOpen] = useState<boolean>(false);\n  const [taskName, setTaskName] = useState<string>(props.taskInfo.name);\n  const [taskDesc, setTaskDesc] = useState<string>(props.taskInfo.desc);\n  const [tags, setTags] = useState<Array<string>>(props.taskInfo.tags);\n  const [taskStatus, setTaskStatus] = useState<string>(props.taskInfo.taskStatus);\n  const handleTagsChange = (tags: Array<string>) => { setTags(tags); }\n  return (\n    <Modal\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      trigger={\n        <Table.Row key={props.taskInfo.index}>\n          <Table.Cell>{props.taskInfo.name}</Table.Cell>\n          <Table.Cell>{props.taskInfo.desc}</Table.Cell>\n          <Table.Cell>\n            <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n              {props.taskInfo.tags.map((tag) =>\n                <div style={{ padding: 2 }}>\n                  <Label color=\"blue\" tag>{tag}</Label>\n                </div>\n              )}\n            </div>\n          </Table.Cell>\n          <Table.Cell>\n            {\n              (props.taskInfo.taskStatus === 'Not Started') ?\n                <Label color=\"red\">{props.taskInfo.taskStatus}</Label>\n                : (props.taskInfo.taskStatus === 'In Progress') ?\n                  <Label color=\"orange\">{props.taskInfo.taskStatus}</Label>\n                  :\n                  <Label color=\"green\">{props.taskInfo.taskStatus}</Label>\n            }\n          </Table.Cell>\n        </Table.Row>\n      }\n    >\n      <Modal.Header>Edit Task</Modal.Header>\n      <Modal.Content>\n        <Modal.Description>\n          <Header>Editing Task: {props.taskInfo.index}</Header>\n          <Form>\n            <Form.Field>\n              <label>Task Name</label>\n              <input placeholder=\"Task Name\" defaultValue={taskName} onChange={(e: any) => setTaskName(e.target.value)} />\n            </Form.Field>\n            <Form.Field>\n              <label>Task Description</label>\n              <TextArea placeholder='Task Description' defaultValue={taskDesc} onChange={(e: any) => setTaskDesc(e.target.value)} />\n            </Form.Field>\n            <Form.Field>\n              <label>Tags</label>\n              <TagDropDown tagSet={props.tagSet} currentTags={tags} onChange={handleTagsChange} />\n            </Form.Field>\n            <Form.Field>\n              <label>Task Status</label>\n              <Dropdown\n                placeholder='Select Friend'\n                fluid\n                selection\n                options={statuses}\n                defaultValue={taskStatus}\n                onChange={(e: {}, { value }: any) => { setTaskStatus(value); console.log(\"change to\", value); }}\n              />\n            </Form.Field>\n          </Form>\n\n        </Modal.Description>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button color='green'>\n          <Icon name='checkmark' /> Save\n        </Button>\n\n      </Modal.Actions>\n    </Modal>);\n}\n\nfunction sortReducer(state: any, action: any) {\n  switch (action.type) {\n    case 'RESET':\n      return initTable(action.payload);\n    case 'CHANGE_SORT':\n      if (state.column === action.column) {\n        return {\n          ...state,\n          data: state.data.slice().reverse(),\n          direction:\n            state.direction === 'ascending' ? 'descending' : 'ascending',\n        }\n      }\n\n      return {\n        column: action.column,\n        data: _.sortBy(state.data, [action.column]),\n        direction: 'ascending',\n      }\n    default:\n      throw new Error()\n  }\n}\n\nconst initTable = (newdata: Array<{ index: number, name: string, desc: string, tags: Array<string>, taskStatus: string }>) => {\n  return { column: null, data: newdata, direction: null };\n}\n\nconst TaskTable = () => {\n  const [tagSet, setTagSet] = useState<Array<string>>(new Array<string>());\n\n  // Sorting\n  const [state, dispatch] = React.useReducer(sortReducer, [], initTable); // here state = {column, data, dir}\n  const { column, data, direction } = state;\n\n  var initTagSet = new Array<string>();\n  var searchTagOptions = new Array<{ key: string, text: string, value: string }>({ key: \"fake\", text: \"f\", value: \"f\" });\n  useEffect(() => {\n    // Task are stored as an array of (creation index, name, description, {tag1, tag2, ...}, taskStatus)\n    let initTasks: Array<{ index: number, name: string, desc: string, tags: Array<string>, taskStatus: string }> = [\n      { index: 1, name: 'Learn HTML', desc: \"Create at least something\", tags: ['Task 1.1', 'Task 1.2', \"Brandon\", \"Hello\", \"hello\"], taskStatus: \"Not Started\" },\n      { index: 2, name: 'Learn CSS', desc: \"Create at least a stylesheet\", tags: ['Task 2.1', 'Task 2.2'], taskStatus: \"In Progress\" },\n      { index: 3, name: 'Learn JAVASCRIPT', desc: \"Create at least an APP\", tags: ['Task 3.1', 'Task 3.2'], taskStatus: \"Completed\" },\n    ];\n    dispatch({ type: 'RESET', payload: initTasks });\n\n    initTagSet = new Array<string>();\n    searchTagOptions = new Array<{ key: string, text: string, value: string }>();\n    initTasks.forEach(task => {\n      task.tags.forEach(tag => {\n        initTagSet.push(tag);\n        searchTagOptions.push({ key: tag, text: tag, value: tag });\n      });\n    });\n\n    // remove duplicates\n    initTagSet = Array.from(new Set(initTagSet));\n    searchTagOptions = Array.from(new Set(searchTagOptions));\n    \n    console.log(\"search tag options\", searchTagOptions);\n    setTagSet(initTagSet);\n  }, []);\n\n  /*\n  useEffect(() => {\n    console.log(tagSet)\n  }, [tagSet]);\n  useEffect(() => {\n    console.log(data)\n  }, [data]);*/\n\n  const [searchTags, setSearchTags] = useState<Array<string>>(new Array<string>());\n  return (\n    <div>\n      <button onClick={() => {\n        let initTasks: Array<{ index: number, name: string, desc: string, tags: Array<string>, taskStatus: string }> = [\n          { index: 1, name: 'Learn HTML', desc: \"Create at least something\", tags: ['Task 1.1', 'Task 1.2', \"Brandon\", \"Hello\", \"hello\"], taskStatus: \"Not Started\" },\n          { index: 2, name: 'Learn CSS', desc: \"Create at least a stylesheet\", tags: ['Task 2.1', 'Task 2.2'], taskStatus: \"In Progress\" },\n          { index: 3, name: 'Learn JAVASCRIPT', desc: \"Create at least an APP\", tags: ['Task 3.1', 'Task 3.2'], taskStatus: \"Completed\" },\n        ];\n        dispatch({ type: 'RESET', payload: initTasks });\n    \n        initTagSet = new Array<string>();\n        searchTagOptions = new Array<{ key: string, text: string, value: string }>();\n        initTasks.forEach(task => {\n          task.tags.forEach(tag => {\n            initTagSet.push(tag);\n            searchTagOptions.push({ key: tag, text: tag, value: tag });\n          });\n        });\n    \n        // remove duplicates\n        initTagSet = Array.from(new Set(initTagSet));\n        searchTagOptions = Array.from(new Set(searchTagOptions));\n        console.log(\"search tag options\", searchTagOptions);\n      }}>Click me</button>\n      <Segment>\n        \n        <Form>\n          <Form.Group inline>\n            <Form.Input label=\"Search\" placeholder='Search' width={6}/>\n            <div style={{display:\"flex\", alignItems:\"center\"}}> \n              <Form.Field  >\n                <Checkbox label='Search in Descriptions'/>\n              </Form.Field>\n            </div>\n            <Dropdown\n              key = {searchTagOptions.length}\n              placeholder='Select Tags'\n              fluid\n              multiple\n              search\n              selection\n              options={searchTagOptions}\n            />\n          </Form.Group>\n        </Form>\n      </Segment>\n      <Table celled selectable sortable fixed>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell\n              sorted={column === 'name' ? direction : null}\n              onClick={() => {\n                dispatch({ type: 'CHANGE_SORT', column: 'name' });\n              }}\n              key=\"name\"\n            >Task Name</Table.HeaderCell>\n            <Table.HeaderCell\n              sorted={column === 'desc' ? direction : null}\n              onClick={() => dispatch({ type: 'CHANGE_SORT', column: 'desc' })}\n              key=\"desc\"\n            >Task Description</Table.HeaderCell>\n            <Table.HeaderCell\n              sorted={column === 'tags' ? direction : null}\n              onClick={() => dispatch({ type: 'CHANGE_SORT', column: 'tags' })}\n              key=\"tags\"\n            >Tags</Table.HeaderCell>\n            <Table.HeaderCell\n              sorted={column === 'taskStatus' ? direction : null}\n              onClick={() => dispatch({ type: 'CHANGE_SORT', column: 'taskStatus' })}\n              key=\"taskStatus\"\n            >Completed</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {data.map((rowData: { index: number, name: string, desc: string, tags: Array<string>, taskStatus: string }) =>\n            <TaskRow key={rowData.index} taskInfo={rowData} tagSet={tagSet}></TaskRow>\n          )}\n        </Table.Body>\n      </Table>\n    </div>\n\n  );\n}\n\nconst MainBodySegment = () => {\n  return (\n    <div className=\"mainBodySegment\">\n      <Segment>\n        <div style={{ textAlign: 'center' }}>\n          <h1>Brandon's \"Modern\" To-Do App</h1>\n        </div>\n        <Divider></Divider>\n        <TaskTable />\n      </Segment >\n    </div >\n  );\n}\n\nfunction App() {\n  useEffect(() => {\n    document.title = \"Modern TODO App\";\n  });\n\n  return (\n    <div\n      style={{\n        padding: '3em',\n      }} >\n      <Helmet>\n        <style>{\"body { background-color: #eddefa; }\"}</style>\n      </Helmet>\n\n      <MainBodySegment />\n    </div >\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}